<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.7-b01  svn-revision#${svn.Last.Changed.Rev}. -->
<definitions targetNamespace="http://webservice.arcflash.ca.com" name="RPSService4D2DImpl" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:tns="http://webservice.arcflash.ca.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
  <types>
    <xs:schema elementFormDefault="qualified" version="1.0" targetNamespace="http://backup.data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:complexType name="rpsPolicy4D2D">
        <xs:sequence>
          <xs:element name="policyId" type="xs:int"/>
          <xs:element name="policyUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="policyName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreId" type="xs:int"/>
          <xs:element name="dataStoreName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="enableGDD" type="xs:boolean"/>
          <xs:element name="storePath" type="xs:string" minOccurs="0"/>
          <xs:element name="storeUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="storePassword" type="xs:string" minOccurs="0"/>
          <xs:element name="enableEncryption" type="xs:boolean"/>
          <xs:element name="encryptionMethod" type="xs:int"/>
          <xs:element name="encryptionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="enableCompression" type="xs:boolean"/>
          <xs:element name="compressionMethod" type="xs:int"/>
          <xs:element name="enableReplication" type="xs:boolean"/>
          <xs:element name="dataStoreSharedPath" type="xs:string" minOccurs="0"/>
          <xs:element name="retentionCount" type="xs:int"/>
          <xs:element name="dailyCount" type="xs:int"/>
          <xs:element name="weeklyCount" type="xs:int"/>
          <xs:element name="monthlyCount" type="xs:int"/>
          <xs:element name="dataStoreOverallStatus" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="emailAlertBaseSettings">
        <xs:sequence>
          <xs:element name="enableProxy" type="xs:boolean"/>
          <xs:element name="enableHTMLFormat" type="xs:boolean"/>
          <xs:element name="proxyAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyPort" type="xs:int"/>
          <xs:element name="proxyUsername" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="subject" type="xs:string" minOccurs="0"/>
          <xs:element name="content" type="xs:string" minOccurs="0"/>
          <xs:element name="fromAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="recipients" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="smtp" type="xs:string" minOccurs="0"/>
          <xs:element name="mailServiceName" type="xs:int"/>
          <xs:element name="mailPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="url" type="xs:string" minOccurs="0"/>
          <xs:element name="smtpPort" type="xs:int"/>
          <xs:element name="enableSsl" type="xs:boolean"/>
          <xs:element name="enableTls" type="xs:boolean"/>
          <xs:element name="mailUser" type="xs:string" minOccurs="0"/>
          <xs:element name="mailAuth" type="xs:boolean"/>
          <xs:element name="proxyAuth" type="xs:boolean"/>
          <xs:element name="enableSettings" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="backupVolumes">
        <xs:sequence>
          <xs:element name="fullMachine" type="xs:boolean"/>
          <xs:element name="volumes" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://webservice.arcflash.arcserve.ca.com/d2dstatus/" xmlns:ns1="http://webservice.arcflash.ca.com" xmlns:tns="http://webservice.arcflash.arcserve.ca.com/d2dstatus/" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:import namespace="http://webservice.arcflash.ca.com"/>

      <xs:complexType name="D2DStatusInfo">
        <xs:sequence>
          <xs:element name="autoOfflieCopy" type="xs:int"/>
          <xs:element name="backupConfiged" type="xs:boolean"/>
          <xs:element name="currentRunningSnapshot" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationAccessible" type="xs:boolean"/>
          <xs:element name="destinationEstimatedBackupCount" type="xs:int"/>
          <xs:element name="destinationFreeSpace" type="xs:long"/>
          <xs:element name="destinationPath" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationStatus" type="tns:D2DStatus" minOccurs="0"/>
          <xs:element name="destinationVCMStorages" type="tns:VCMStorage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="driverInstalled" type="xs:boolean"/>
          <xs:element name="estimatedValue" type="tns:D2DEstimatedValue" minOccurs="0"/>
          <xs:element name="heartbeatStatus" type="xs:int"/>
          <xs:element name="isUseBackupSets" type="xs:boolean"/>
          <xs:element name="lastBackupJobStatus" type="tns:D2DJobStatus" minOccurs="0"/>
          <xs:element name="lastBackupStartTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="lastBackupStatus" type="tns:D2DStatus" minOccurs="0"/>
          <xs:element name="lastBackupType" type="tns:D2DBackupType" minOccurs="0"/>
          <xs:element name="monitorUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="mostRecentRepDuration" type="xs:long"/>
          <xs:element name="overallStatus" type="tns:D2DStatus" minOccurs="0"/>
          <xs:element name="recoveryPointCount" type="xs:int"/>
          <xs:element name="recoveryPointMounted" type="xs:string" minOccurs="0"/>
          <xs:element name="recoveryPointRetentionCount" type="xs:int"/>
          <xs:element name="recoveryPointStatus" type="tns:D2DStatus" minOccurs="0"/>
          <xs:element name="restarted" type="xs:boolean"/>
          <xs:element name="snapshots" type="ns1:vmSnapshotsInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="uuid" type="xs:string" minOccurs="0"/>
          <xs:element name="vmName" type="xs:string" minOccurs="0"/>
          <xs:element name="vmStatus" type="ns1:vmPowerStatus" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="VCMStorage">
        <xs:sequence>
          <xs:element name="coldStandSize" type="xs:long"/>
          <xs:element name="freeSize" type="xs:long"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="otherSize" type="xs:long"/>
          <xs:element name="totalSize" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:simpleType name="D2DStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Unknown"/>
          <xs:enumeration value="OK"/>
          <xs:enumeration value="Warning"/>
          <xs:enumeration value="Error"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="D2DEstimatedValue">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Unknown"/>
          <xs:enumeration value="FLASE"/>
          <xs:enumeration value="TRUE"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="D2DJobStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Unknown"/>
          <xs:enumeration value="Finished"/>
          <xs:enumeration value="Failed"/>
          <xs:enumeration value="Active"/>
          <xs:enumeration value="Canceled"/>
          <xs:enumeration value="Crashed"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="D2DBackupType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Unknown"/>
          <xs:enumeration value="FullBackup"/>
          <xs:enumeration value="IncrementalBackup"/>
          <xs:enumeration value="ResyncBackup"/>
        </xs:restriction>
      </xs:simpleType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://history.job.data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:import namespace="http://webservice.arcflash.ca.com"/>

      <xs:complexType name="FlashJobHistoryResult">
        <xs:sequence>
          <xs:element name="jobHistory" type="tns:flashJobHistory" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="totalCount" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://webservice.arcflash.ca.com" xmlns:ns2="http://activitylog.data.webservice.arcflash.ca.com/xsd" xmlns:ns4="http://backup.data.webservice.arcflash.ca.com/xsd" xmlns:ns3="http://restore.data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns5="http://data.webservice.arcflash.ca.com/xsd" xmlns:ns6="http://service.listener.arcflash.ca.com" xmlns:ns7="http://history.job.data.webservice.arcflash.ca.com/xsd" xmlns:ns8="http://webservice.arcflash.arcserve.ca.com/d2dstatus/">

      <xs:import namespace="http://activitylog.data.webservice.arcflash.ca.com/xsd"/>

      <xs:import namespace="http://restore.data.webservice.arcflash.ca.com/xsd"/>

      <xs:import namespace="http://backup.data.webservice.arcflash.ca.com/xsd"/>

      <xs:import namespace="http://data.webservice.arcflash.ca.com/xsd"/>

      <xs:import namespace="http://service.listener.arcflash.ca.com"/>

      <xs:import namespace="http://history.job.data.webservice.arcflash.ca.com/xsd"/>

      <xs:import namespace="http://webservice.arcflash.arcserve.ca.com/d2dstatus/"/>

      <xs:element name="ArchiveDelConfiguration" type="tns:archiveConfiguration"/>

      <xs:element name="BackupD2D" type="tns:BackupD2D"/>

      <xs:element name="DataStoreInfo" type="tns:DataStoreInfo"/>

      <xs:element name="DataStoreSettingInfo" type="tns:dataStoreSettingInfo"/>

      <xs:element name="DataStoreUpdateDSPathStatus" type="tns:DataStoreUpdateDSPathStatus"/>

      <xs:element name="DataStoreUpdateDSPathStatusResponse" type="tns:DataStoreUpdateDSPathStatusResponse"/>

      <xs:element name="DiskFileInfo" type="tns:diskFileInfo"/>

      <xs:element name="InstantVMConfig" type="tns:instantVMConfig"/>

      <xs:element name="InstantVMNodes" type="tns:instantVMNode"/>

      <xs:element name="RPSCancelJob" type="tns:RPSCancelJob"/>

      <xs:element name="RPSCancelJobResponse" type="tns:RPSCancelJobResponse"/>

      <xs:element name="RPSJob" type="tns:rpsJobInfo"/>

      <xs:element name="RPSResumeJob" type="tns:RPSResumeJob"/>

      <xs:element name="RPSResumeJobResponse" type="tns:RPSResumeJobResponse"/>

      <xs:element name="RPSSubmitArchiveJob" type="tns:RPSSubmitArchiveJob"/>

      <xs:element name="RPSSubmitArchiveJobResponse" type="tns:RPSSubmitArchiveJobResponse"/>

      <xs:element name="RPSSubmitBMRJob" type="tns:RPSSubmitBMRJob"/>

      <xs:element name="RPSSubmitBMRJobResponse" type="tns:RPSSubmitBMRJobResponse"/>

      <xs:element name="RPSSubmitBackup" type="tns:RPSSubmitBackup"/>

      <xs:element name="RPSSubmitBackupResponse" type="tns:RPSSubmitBackupResponse"/>

      <xs:element name="RPSSubmitCatalog" type="tns:RPSSubmitCatalog"/>

      <xs:element name="RPSSubmitCatalogResponse" type="tns:RPSSubmitCatalogResponse"/>

      <xs:element name="RPSSubmitConversion" type="tns:RPSSubmitConversion"/>

      <xs:element name="RPSSubmitConversionResponse" type="tns:RPSSubmitConversionResponse"/>

      <xs:element name="RPSSubmitCopyJob" type="tns:RPSSubmitCopyJob"/>

      <xs:element name="RPSSubmitCopyJobResponse" type="tns:RPSSubmitCopyJobResponse"/>

      <xs:element name="RPSSubmitInstantVM" type="tns:RPSSubmitInstantVM"/>

      <xs:element name="RPSSubmitInstantVMResponse" type="tns:RPSSubmitInstantVMResponse"/>

      <xs:element name="RPSSubmitRestoreJob" type="tns:RPSSubmitRestoreJob"/>

      <xs:element name="RPSSubmitRestoreJobResponse" type="tns:RPSSubmitRestoreJobResponse"/>

      <xs:element name="RegisterAndAssignD2DListToRPS" type="tns:RegisterAndAssignD2DListToRPS"/>

      <xs:element name="RegisterAndAssignD2DListToRPSResponse" type="tns:RegisterAndAssignD2DListToRPSResponse"/>

      <xs:element name="RegisterD2DListToPolicy" type="tns:RegisterD2DListToPolicy"/>

      <xs:element name="RegisterD2DListToPolicyResponse" type="tns:RegisterD2DListToPolicyResponse"/>

      <xs:element name="RegisterD2DToRPS" type="tns:RegisterD2DToRPS"/>

      <xs:element name="RegisterD2DToRPSResponse" type="tns:RegisterD2DToRPSResponse"/>

      <xs:element name="UnRegisterD2DFromRPS" type="tns:UnRegisterD2DFromRPS"/>

      <xs:element name="UnRegisterD2DFromRPSResponse" type="tns:UnRegisterD2DFromRPSResponse"/>

      <xs:element name="UnRegisterD2DListFromRPS" type="tns:UnRegisterD2DListFromRPS"/>

      <xs:element name="UnRegisterD2DListFromRPSResponse" type="tns:UnRegisterD2DListFromRPSResponse"/>

      <xs:element name="addConverterToRPS" type="tns:addConverterToRPS"/>

      <xs:element name="addConverterToRPSResponse" type="tns:addConverterToRPSResponse"/>

      <xs:element name="archiveJobArg" type="tns:archiveJobArg"/>

      <xs:element name="assignPolicyToD2D" type="tns:assignPolicyToD2D"/>

      <xs:element name="assignPolicyToD2DResponse" type="tns:assignPolicyToD2DResponse"/>

      <xs:element name="backupJobArg" type="tns:backupJobArg"/>

      <xs:element name="canBMRJobRun" type="tns:canBMRJobRun"/>

      <xs:element name="canBMRJobRunResponse" type="tns:canBMRJobRunResponse"/>

      <xs:element name="cancelJob" type="tns:cancelJob"/>

      <xs:element name="cancelJobResponse" type="tns:cancelJobResponse"/>

      <xs:element name="catalogJobArg" type="tns:catalogJobArg"/>

      <xs:element name="checkUserByUUID" type="tns:checkUserByUUID"/>

      <xs:element name="checkUserByUUIDResponse" type="tns:checkUserByUUIDResponse"/>

      <xs:element name="copyJobArg" type="tns:copyJobArg"/>

      <xs:element name="dataStoreCommonStatus" type="tns:dataStoreCommonStatus"/>

      <xs:element name="dedupInstanceStatus" type="tns:dedupInstanceStatus"/>

      <xs:element name="establishTrust" type="tns:establishTrust"/>

      <xs:element name="establishTrustResponse" type="tns:establishTrustResponse"/>

      <xs:element name="generateBackupInfoDB" type="tns:generateBackupInfoDB"/>

      <xs:element name="generateBackupInfoDBResponse" type="tns:generateBackupInfoDBResponse"/>

      <xs:element name="getActivityLogs" type="tns:getActivityLogs"/>

      <xs:element name="getActivityLogsResponse" type="tns:getActivityLogsResponse"/>

      <xs:element name="getAllArchiveCatalogItems" type="tns:getAllArchiveCatalogItems"/>

      <xs:element name="getAllArchiveCatalogItemsResponse" type="tns:getAllArchiveCatalogItemsResponse"/>

      <xs:element name="getArchiveCatalogItems" type="tns:getArchiveCatalogItems"/>

      <xs:element name="getArchiveCatalogItemsCount" type="tns:getArchiveCatalogItemsCount"/>

      <xs:element name="getArchiveCatalogItemsCountResponse" type="tns:getArchiveCatalogItemsCountResponse"/>

      <xs:element name="getArchiveCatalogItemsResponse" type="tns:getArchiveCatalogItemsResponse"/>

      <xs:element name="getArchiveDestinationItems" type="tns:getArchiveDestinationItems"/>

      <xs:element name="getArchiveDestinationItemsResponse" type="tns:getArchiveDestinationItemsResponse"/>

      <xs:element name="getArchiveSessions" type="tns:getArchiveSessions"/>

      <xs:element name="getArchiveSessionsResponse" type="tns:getArchiveSessionsResponse"/>

      <xs:element name="getBackupD2DList" type="tns:getBackupD2DList"/>

      <xs:element name="getBackupD2DListResponse" type="tns:getBackupD2DListResponse"/>

      <xs:element name="getClientRunningJobs" type="tns:getClientRunningJobs"/>

      <xs:element name="getClientRunningJobsResponse" type="tns:getClientRunningJobsResponse"/>

      <xs:element name="getClientWaitingJobs" type="tns:getClientWaitingJobs"/>

      <xs:element name="getClientWaitingJobsResponse" type="tns:getClientWaitingJobsResponse"/>

      <xs:element name="getDataStoreHealthStatus" type="tns:getDataStoreHealthStatus"/>

      <xs:element name="getDataStoreHealthStatusResponse" type="tns:getDataStoreHealthStatusResponse"/>

      <xs:element name="getDataStoreInfo4Lightintegration" type="tns:getDataStoreInfo4Lightintegration"/>

      <xs:element name="getDataStoreInfo4LightintegrationResponse" type="tns:getDataStoreInfo4LightintegrationResponse"/>

      <xs:element name="getDataStoreInstance" type="tns:getDataStoreInstance"/>

      <xs:element name="getDataStoreInstanceResponse" type="tns:getDataStoreInstanceResponse"/>

      <xs:element name="getDataStoreStatus" type="tns:getDataStoreStatus"/>

      <xs:element name="getDataStoreStatusResponse" type="tns:getDataStoreStatusResponse"/>

      <xs:element name="getDefaultJobHistoryFilter" type="tns:getDefaultJobHistoryFilter"/>

      <xs:element name="getDefaultJobHistoryFilterResponse" type="tns:getDefaultJobHistoryFilterResponse"/>

      <xs:element name="getJobActivityLogs" type="tns:getJobActivityLogs"/>

      <xs:element name="getJobActivityLogsResponse" type="tns:getJobActivityLogsResponse"/>

      <xs:element name="getJobHistory" type="tns:getJobHistory"/>

      <xs:element name="getJobHistoryResponse" type="tns:getJobHistoryResponse"/>

      <xs:element name="getJobMonitorsByD2DUuidAndType" type="tns:getJobMonitorsByD2DUuidAndType"/>

      <xs:element name="getJobMonitorsByD2DUuidAndTypeResponse" type="tns:getJobMonitorsByD2DUuidAndTypeResponse"/>

      <xs:element name="getMappedNetworkPath" type="tns:getMappedNetworkPath"/>

      <xs:element name="getMappedNetworkPathResponse" type="tns:getMappedNetworkPathResponse"/>

      <xs:element name="getRPSJobs" type="tns:getRPSJobs"/>

      <xs:element name="getRPSJobsResponse" type="tns:getRPSJobsResponse"/>

      <xs:element name="getRPSPolicy4D2D" type="tns:getRPSPolicy4D2D"/>

      <xs:element name="getRPSPolicy4D2DResponse" type="tns:getRPSPolicy4D2DResponse"/>

      <xs:element name="getRPSPolicyList" type="tns:getRPSPolicyList"/>

      <xs:element name="getRPSPolicyList4Restore" type="tns:getRPSPolicyList4Restore"/>

      <xs:element name="getRPSPolicyList4RestoreResponse" type="tns:getRPSPolicyList4RestoreResponse"/>

      <xs:element name="getRPSPolicyListResponse" type="tns:getRPSPolicyListResponse"/>

      <xs:element name="getRPSPolicySummaries" type="tns:getRPSPolicySummaries"/>

      <xs:element name="getRPSPolicySummariesResponse" type="tns:getRPSPolicySummariesResponse"/>

      <xs:element name="getRPSRunningJobs" type="tns:getRPSRunningJobs"/>

      <xs:element name="getRPSRunningJobsByType" type="tns:getRPSRunningJobsByType"/>

      <xs:element name="getRPSRunningJobsByTypeResponse" type="tns:getRPSRunningJobsByTypeResponse"/>

      <xs:element name="getRPSRunningJobsResponse" type="tns:getRPSRunningJobsResponse"/>

      <xs:element name="getRPSServerID" type="tns:getRPSServerID"/>

      <xs:element name="getRPSServerIDResponse" type="tns:getRPSServerIDResponse"/>

      <xs:element name="getRPSWaitingJobs" type="tns:getRPSWaitingJobs"/>

      <xs:element name="getRPSWaitingJobsByType" type="tns:getRPSWaitingJobsByType"/>

      <xs:element name="getRPSWaitingJobsByTypeResponse" type="tns:getRPSWaitingJobsByTypeResponse"/>

      <xs:element name="getRPSWaitingJobsResponse" type="tns:getRPSWaitingJobsResponse"/>

      <xs:element name="getRegistedClientByDatastore" type="tns:getRegistedClientByDatastore"/>

      <xs:element name="getRegistedClientByDatastoreResponse" type="tns:getRegistedClientByDatastoreResponse"/>

      <xs:element name="getRegistedClientList" type="tns:getRegistedClientList"/>

      <xs:element name="getRegistedClientListResponse" type="tns:getRegistedClientListResponse"/>

      <xs:element name="getVersionInfo" type="tns:getVersionInfo"/>

      <xs:element name="getVersionInfoResponse" type="tns:getVersionInfoResponse"/>

      <xs:element name="handleActivityLogEvent" type="tns:handleActivityLogEvent"/>

      <xs:element name="handleActivityLogEventResponse" type="tns:handleActivityLogEventResponse"/>

      <xs:element name="handleD2DIPChange" type="tns:handleD2DIPChange"/>

      <xs:element name="handleD2DIPChangeResponse" type="tns:handleD2DIPChangeResponse"/>

      <xs:element name="handleDataSyncEvent" type="tns:handleDataSyncEvent"/>

      <xs:element name="handleDataSyncEventResponse" type="tns:handleDataSyncEventResponse"/>

      <xs:element name="handleDatastoreStatusChangeEvent" type="tns:handleDatastoreStatusChangeEvent"/>

      <xs:element name="handleDatastoreStatusChangeEventResponse" type="tns:handleDatastoreStatusChangeEventResponse"/>

      <xs:element name="handleJobEvent" type="tns:handleJobEvent"/>

      <xs:element name="handleJobEventResponse" type="tns:handleJobEventResponse"/>

      <xs:element name="handleJobHistoryEvent" type="tns:handleJobHistoryEvent"/>

      <xs:element name="handleJobHistoryEventResponse" type="tns:handleJobHistoryEventResponse"/>

      <xs:element name="ivmJobArg" type="tns:ivmJobArg"/>

      <xs:element name="linuxBackupJobArg" type="tns:linuxBackupJobArg"/>

      <xs:element name="linuxBaseJobArg" type="tns:linuxBaseJobArg"/>

      <xs:element name="login" type="tns:login"/>

      <xs:element name="loginResponse" type="tns:loginResponse"/>

      <xs:element name="pauseMerge" type="tns:pauseMerge"/>

      <xs:element name="pauseMergeResponse" type="tns:pauseMergeResponse"/>

      <xs:element name="queryCatalogStatus" type="tns:queryCatalogStatus"/>

      <xs:element name="queryCatalogStatusResponse" type="tns:queryCatalogStatusResponse"/>

      <xs:element name="reportBMRJobMonitor" type="tns:reportBMRJobMonitor"/>

      <xs:element name="reportBMRJobMonitorResponse" type="tns:reportBMRJobMonitorResponse"/>

      <xs:element name="restoreJobArg" type="tns:restoreJobArg"/>

      <xs:element name="resumeMerge" type="tns:resumeMerge"/>

      <xs:element name="resumeMergeResponse" type="tns:resumeMergeResponse"/>

      <xs:element name="rpsPolicy" type="tns:rpsPolicy"/>

      <xs:element name="rpsSubmitLinuxBackupJob" type="tns:rpsSubmitLinuxBackupJob"/>

      <xs:element name="rpsSubmitLinuxBackupJobResponse" type="tns:rpsSubmitLinuxBackupJobResponse"/>

      <xs:element name="rpsSubmitLinuxBaseJob" type="tns:rpsSubmitLinuxBaseJob"/>

      <xs:element name="rpsSubmitLinuxBaseJobResponse" type="tns:rpsSubmitLinuxBaseJobResponse"/>

      <xs:element name="submitFSOndemandCatalogJob" type="tns:submitFSOndemandCatalogJob"/>

      <xs:element name="submitFSOndemandCatalogJobResponse" type="tns:submitFSOndemandCatalogJobResponse"/>

      <xs:element name="validateDest" type="tns:validateDest"/>

      <xs:element name="validateDestResponse" type="tns:validateDestResponse"/>

      <xs:element name="validateUser" type="tns:validateUser"/>

      <xs:element name="validateUserByUUID" type="tns:validateUserByUUID"/>

      <xs:element name="validateUserByUUIDResponse" type="tns:validateUserByUUIDResponse"/>

      <xs:element name="validateUserResponse" type="tns:validateUserResponse"/>

      <xs:complexType name="getJobActivityLogs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:long"/>
          <xs:element name="arg1" type="xs:int"/>
          <xs:element name="arg2" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getJobActivityLogsResponse">
        <xs:sequence>
          <xs:element name="return" type="ns2:ActivityLogResult" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="addConverterToRPS">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="registerNodeInfo">
        <xs:sequence>
          <xs:element name="backupDestination" type="xs:string" minOccurs="0"/>
          <xs:element name="clientUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="d2dSID" type="xs:string" minOccurs="0"/>
          <xs:element name="ipList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="linuxNode" type="xs:boolean"/>
          <xs:element name="loginUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="nodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="policyUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="port" type="xs:long" minOccurs="0"/>
          <xs:element name="protocol" type="xs:string" minOccurs="0"/>
          <xs:element name="vmHostName" type="xs:string" minOccurs="0"/>
          <xs:element name="vmInstanceUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="vmName" type="xs:string" minOccurs="0"/>
          <xs:element name="vmUUID" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="addConverterToRPSResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitCopyJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:copyJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="copyJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArgWithSourceInfo">
            <xs:sequence>
              <xs:element name="jobScript" type="ns3:CopyJob" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="baseJobArgWithSourceInfo">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArg">
            <xs:sequence>
              <xs:element name="d2dLoginUUID" type="xs:string" minOccurs="0"/>
              <xs:element name="ipList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="localD2DName" type="xs:string" minOccurs="0"/>
              <xs:element name="localD2DPort" type="xs:int"/>
              <xs:element name="localD2DProtocol" type="xs:string" minOccurs="0"/>
              <xs:element name="srcRps" type="tns:RPSHost" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="baseJobArg">
        <xs:sequence>
          <xs:element name="d2dServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="d2dServerUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="errorCode" type="xs:long"/>
          <xs:element name="jobDependencies" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="jobDetailGroup" type="xs:string" minOccurs="0"/>
          <xs:element name="jobDetailName" type="xs:string" minOccurs="0"/>
          <xs:element name="jobId" type="xs:long"/>
          <xs:element name="jobName" type="xs:string" minOccurs="0"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="manual" type="xs:boolean"/>
          <xs:element name="onDemand" type="xs:boolean"/>
          <xs:element name="oriJobID" type="xs:long"/>
          <xs:element name="oriJobType" type="xs:int"/>
          <xs:element name="policyUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="retryTimes" type="xs:int"/>
          <xs:element name="VM" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="restoreJobExchSubItem">
        <xs:sequence>
          <xs:element name="exchangeObjectID" type="xs:string" minOccurs="0"/>
          <xs:element name="mailboxName" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszDescription" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszItemName" type="xs:string" minOccurs="0"/>
          <xs:element name="ulItemType" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="restoreJobADItem">
        <xs:sequence>
          <xs:element name="allAttribute" type="xs:boolean"/>
          <xs:element name="allChild" type="xs:boolean"/>
          <xs:element name="attrNames" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="id" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSHost">
        <xs:sequence>
          <xs:element name="rhostId" type="xs:int"/>
          <xs:element name="rhostname" type="xs:string" minOccurs="0"/>
          <xs:element name="username" type="xs:string" minOccurs="0"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="uuid" type="xs:string" minOccurs="0"/>
          <xs:element name="port" type="xs:int"/>
          <xs:element name="httpProtocol" type="xs:boolean"/>
          <xs:element name="displayName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitCopyJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicyList4Restore">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRPSPolicyList4RestoreResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsPolicy4D2DRestore" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsPolicy4D2DRestore">
        <xs:complexContent>
          <xs:extension base="ns4:rpsPolicy4D2D">
            <xs:sequence>
              <xs:element name="d2dList" type="tns:BackupD2D" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="BackupD2D">
        <xs:sequence/>
        <xs:attribute name="hostname" type="xs:string"/>
        <xs:attribute name="fullBackupDestination" type="xs:string"/>
        <xs:attribute name="destination" type="xs:string"/>
        <xs:attribute name="desPassword" type="xs:string"/>
        <xs:attribute name="desUsername" type="xs:string"/>
        <xs:attribute name="datastoreName" type="xs:string"/>
        <xs:attribute name="datastoreUUID" type="xs:string"/>
        <xs:attribute name="policyUUID" type="xs:string"/>
        <xs:attribute name="loginUUID" type="xs:string"/>
        <xs:attribute name="clientUUID" type="xs:string"/>
        <xs:attribute name="vm" type="xs:boolean" use="required"/>
        <xs:attribute name="replicatedClient" type="xs:boolean" use="required"/>
        <xs:attribute name="port" type="xs:long" use="required"/>
        <xs:attribute name="protocol" type="xs:string"/>
        <xs:attribute name="planUUID" type="xs:string"/>
        <xs:attribute name="lastBackupTime" type="xs:long" use="required"/>
        <xs:attribute name="enableEncryption" type="xs:long" use="required"/>
        <xs:attribute name="username" type="xs:string"/>
        <xs:attribute name="destPlanName" type="xs:string"/>
        <xs:attribute name="sourceRPSServerName" type="xs:string"/>
        <xs:attribute name="rawDataSizeB" type="xs:long" use="required"/>
        <xs:attribute name="dataSizeB" type="xs:long" use="required"/>
        <xs:attribute name="isIntegral" type="xs:boolean" use="required"/>
        <xs:attribute name="isPurging" type="xs:boolean" use="required"/>
        <xs:attribute name="D2DSid" type="xs:string"/>
        <xs:attribute name="vmUUID" type="xs:string"/>
        <xs:attribute name="vmHostName" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="RPSSubmitCatalog">
        <xs:sequence>
          <xs:element name="arg0" type="tns:catalogJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="catalogJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArg">
            <xs:sequence>
              <xs:element name="queueType" type="xs:long"/>
              <xs:element name="sessNum" type="xs:long"/>
              <xs:element name="destination" type="xs:string" minOccurs="0"/>
              <xs:element name="userName" type="xs:string" minOccurs="0"/>
              <xs:element name="password" type="xs:string" minOccurs="0"/>
              <xs:element name="serverIdentity" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="RPSSubmitCatalogResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="assignPolicyToD2D">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="assignPolicyToD2DResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitRestoreJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:restoreJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="restoreJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArgWithSourceInfo">
            <xs:sequence>
              <xs:element name="jobScript" type="ns3:RestoreJob" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="restoreExchangeGRTOption">
        <xs:sequence>
          <xs:element name="alternateServer" type="xs:string" minOccurs="0"/>
          <xs:element name="defaultE15CAS" type="xs:string" minOccurs="0"/>
          <xs:element name="folder" type="xs:string" minOccurs="0"/>
          <xs:element name="option" type="xs:long"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="serverVersion" type="xs:long"/>
          <xs:element name="userName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="restoreADOption">
        <xs:sequence>
          <xs:element name="skipDeletedObject" type="xs:boolean"/>
          <xs:element name="skipMovedObject" type="xs:boolean"/>
          <xs:element name="skipRenamedObject" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitRestoreJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSRunningJobs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSRunningJobsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsJobInfo">
        <xs:sequence>
          <xs:element name="d2dServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="d2duuid" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsuuid" type="xs:string" minOccurs="0"/>
          <xs:element name="policyUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="planUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="targetPlanUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreName" type="xs:string" minOccurs="0"/>
          <xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="jobMethod" type="xs:int"/>
          <xs:element name="jobId" type="xs:long"/>
          <xs:element name="jobIdentity" type="xs:string" minOccurs="0"/>
          <xs:element name="jobStatus" type="tns:rpsJobStatus" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSResumeJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:controlJobFilter" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="controlJobFilter">
        <xs:sequence>
          <xs:element name="d2DNameList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="jobIDList" type="xs:long" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="policyIDList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="RPSNameList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSResumeJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreInstance">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreInstanceResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:dataStoreSettingInfo" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dataStoreSettingInfo">
        <xs:sequence>
          <xs:element name="compressionMethod" type="xs:int"/>
          <xs:element name="DSCommSetting" type="tns:dataStoreCommonInfo" minOccurs="0"/>
          <xs:element name="datastore_id" type="xs:int"/>
          <xs:element name="datastore_name" type="xs:string" minOccurs="0"/>
          <xs:element name="displayName" type="xs:string" minOccurs="0"/>
          <xs:element name="enableCompression" type="xs:long"/>
          <xs:element name="enableEncryption" type="xs:long"/>
          <xs:element name="enableGDD" type="xs:long"/>
          <xs:element name="encryptionMethod" type="xs:int"/>
          <xs:element name="encryptionPwd" type="xs:string" minOccurs="0"/>
          <xs:element name="flags" type="xs:long"/>
          <xs:element name="GDDSetting" type="tns:dedupSettingInfo" minOccurs="0"/>
          <xs:element name="maxNodeCount" type="xs:int"/>
          <xs:element name="node_id" type="xs:int"/>
          <xs:element name="ownershipHostName" type="xs:string" minOccurs="0"/>
          <xs:element name="ownershipHostSID" type="xs:string" minOccurs="0"/>
          <xs:element name="status" type="xs:int"/>
          <xs:element name="version" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dataStoreCommonInfo">
        <xs:sequence>
          <xs:element name="errorThreshold" type="xs:double"/>
          <xs:element name="flags" type="xs:long"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="storePath" type="xs:string" minOccurs="0"/>
          <xs:element name="storeSharedName" type="xs:string" minOccurs="0"/>
          <xs:element name="user" type="xs:string" minOccurs="0"/>
          <xs:element name="warnThreshold" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dedupSettingInfo">
        <xs:sequence>
          <xs:element name="blockSize" type="xs:int"/>
          <xs:element name="dataCapacity" type="xs:int"/>
          <xs:element name="dataStoreErrorThreshold" type="xs:double"/>
          <xs:element name="dataStorePassword" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStorePath" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUser" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreWarnThreshold" type="xs:double"/>
          <xs:element name="hashRoleMode" type="xs:int"/>
          <xs:element name="hashStoreErrorThreshold" type="xs:double"/>
          <xs:element name="hashStorePassword" type="xs:string" minOccurs="0"/>
          <xs:element name="hashStorePath" type="xs:string" minOccurs="0"/>
          <xs:element name="hashStoreUser" type="xs:string" minOccurs="0"/>
          <xs:element name="hashStoreWarnThreshold" type="xs:double"/>
          <xs:element name="indexStoreErrorThreshold" type="xs:double"/>
          <xs:element name="indexStorePassword" type="xs:string" minOccurs="0"/>
          <xs:element name="indexStorePath" type="xs:string" minOccurs="0"/>
          <xs:element name="indexStoreUser" type="xs:string" minOccurs="0"/>
          <xs:element name="indexStoreWarnThreshold" type="xs:double"/>
          <xs:element name="memMinRequireSize" type="xs:long"/>
          <xs:element name="memoryErrorThreshold" type="xs:double"/>
          <xs:element name="memorySize" type="xs:int"/>
          <xs:element name="memoryWarnThreshold" type="xs:double"/>
          <xs:element name="storeName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicySummaries">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicySummariesResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsPolicy" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsPolicy">
        <xs:sequence>
          <xs:element name="rpsSettings" type="tns:rpsSettings" minOccurs="0"/>
          <xs:element name="advanceSchedule" type="ns5:advanceSchedule" minOccurs="0"/>
          <xs:element name="planUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="policyType" type="xs:int"/>
          <xs:element name="archiveTotape" type="tns:archiveConfig" minOccurs="0"/>
          <xs:element name="fileCopyConfiguration" type="tns:archiveConfiguration" minOccurs="0"/>
          <xs:element name="fileArchiveConfiguration" type="tns:archiveConfiguration" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="rpsSettings">
        <xs:sequence>
          <xs:element name="rpsBasicSettings" type="tns:rpsBasicSettings" minOccurs="0"/>
          <xs:element name="rpsReplicationSettings" type="tns:RPSReplicationSettings" minOccurs="0"/>
          <xs:element name="rpsDataStoreSettings" type="tns:RPSDataStoreSettings" minOccurs="0"/>
          <xs:element name="rpsRetentionSettings" type="tns:Retention" minOccurs="0"/>
          <xs:element name="rpsEmailAlertSettings" type="tns:RpsEmailAlertSettings" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="concurrentReplicationJobCount" type="xs:int" use="required"/>
      </xs:complexType>

      <xs:complexType name="rpsBasicSettings">
        <xs:sequence/>
        <xs:attribute name="storageUsageUpperLimit" type="xs:long" use="required"/>
        <xs:attribute name="enableCatalogGenerating" type="xs:boolean" use="required"/>
        <xs:attribute name="maxIncrementalSessions" type="xs:long" use="required"/>
        <xs:attribute name="maxIncrementalSessionsUnit" type="xs:int" use="required"/>
        <xs:attribute name="maxSyntheticalAndFullSessions" type="xs:long" use="required"/>
        <xs:attribute name="mergeStartType" type="xs:int" use="required"/>
        <xs:attribute name="mergeStartTime" type="xs:long" use="required"/>
        <xs:attribute name="mergeStartDayOfWeek" type="xs:int" use="required"/>
        <xs:attribute name="mergeStopType" type="xs:int" use="required"/>
        <xs:attribute name="mergeStopTime" type="xs:long" use="required"/>
        <xs:attribute name="mergeStopDayOfWeek" type="xs:int" use="required"/>
      </xs:complexType>

      <xs:complexType name="RPSReplicationSettings">
        <xs:sequence>
          <xs:element name="replicationPolicySettings" type="tns:ReplicationPolicySettings" minOccurs="0"/>
          <xs:element name="rpsBandWidthThrottlingSettings" type="tns:RPSBandWidthThrottlingSettings" minOccurs="0"/>
          <xs:element name="mspReplicationSettings" type="tns:mspReplicationSettings" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="enableReplication" type="xs:boolean" use="required"/>
        <xs:attribute name="hostId" type="xs:int" use="required"/>
        <xs:attribute name="hostName" type="xs:string"/>
        <xs:attribute name="port" type="xs:int" use="required"/>
        <xs:attribute name="userName" type="xs:string"/>
        <xs:attribute name="password" type="xs:string"/>
        <xs:attribute name="uuid" type="xs:string"/>
        <xs:attribute name="protocol" type="xs:int" use="required"/>
        <xs:attribute name="compress" type="xs:boolean" use="required"/>
        <xs:attribute name="encryption" type="xs:boolean" use="required"/>
        <xs:attribute name="transportMode" type="xs:int" use="required"/>
        <xs:attribute name="transportPort" type="xs:int" use="required"/>
        <xs:attribute name="streamNumber" type="xs:int" use="required"/>
        <xs:attribute name="enableProxy" type="xs:boolean" use="required"/>
        <xs:attribute name="proxyHostname" type="xs:string"/>
        <xs:attribute name="proxyRequireAuthentication" type="xs:boolean" use="required"/>
        <xs:attribute name="proxyUsername" type="xs:string"/>
        <xs:attribute name="proxyPassword" type="xs:string"/>
        <xs:attribute name="proxyPort" type="xs:int" use="required"/>
        <xs:attribute name="bandwidthType" type="xs:int" use="required"/>
        <xs:attribute name="bandwidthThrotting" type="xs:long" use="required"/>
        <xs:attribute name="replicationStartType" type="xs:int" use="required"/>
        <xs:attribute name="replicationStartTime" type="xs:long" use="required"/>
        <xs:attribute name="replicationStartDayOfWeek" type="xs:int" use="required"/>
        <xs:attribute name="replicationStartLoop" type="xs:int" use="required"/>
        <xs:attribute name="makeupRetryStart" type="xs:int" use="required"/>
        <xs:attribute name="makeupRetryTimes" type="xs:int" use="required"/>
        <xs:attribute name="targetPlanUuid" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="ReplicationPolicySettings">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="uuid" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="RPSBandWidthThrottlingSettings">
        <xs:sequence>
          <xs:element name="dailyList" type="tns:RPSDailyBandWidthThrottlingSettings" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="simpleThrottling" type="xs:long" use="required"/>
        <xs:attribute name="enableAdvancedSetting" type="xs:boolean" use="required"/>
      </xs:complexType>

      <xs:complexType name="RPSDailyBandWidthThrottlingSettings">
        <xs:sequence>
          <xs:element name="itemList" type="tns:BandWidthThrottlingItem" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="useLessField" type="xs:int" use="required"/>
      </xs:complexType>

      <xs:complexType name="BandWidthThrottlingItem">
        <xs:sequence>
          <xs:element name="startDayTime" type="ns5:dayTime" minOccurs="0"/>
          <xs:element name="endDayTime" type="ns5:dayTime" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="throttlingValue" type="xs:long" use="required"/>
      </xs:complexType>

      <xs:complexType name="mspReplicationSettings">
        <xs:sequence>
          <xs:element name="mspServer" type="tns:RPSHost" minOccurs="0"/>
          <xs:element name="mspReplicationHttpProxy" type="tns:httpProxy" minOccurs="0"/>
          <xs:element name="mspPlanSettings" type="tns:mspPlanSettings" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="httpProxy">
        <xs:sequence>
          <xs:element name="proxyDomainname" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyPort" type="xs:int"/>
          <xs:element name="proxyRequiresAuth" type="xs:boolean"/>
          <xs:element name="proxyUsername" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="mspPlanSettings">
        <xs:sequence>
          <xs:element name="mspPlanGlobalUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="mspPlanUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="mspPlanName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSDataStoreSettings">
        <xs:sequence>
          <xs:element name="dataStoreName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreDisplayName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="Retention">
        <xs:sequence>
          <xs:element name="retentionCount" type="xs:int"/>
          <xs:element name="dailyCount" type="xs:int"/>
          <xs:element name="weeklyCount" type="xs:int"/>
          <xs:element name="monthlyCount" type="xs:int"/>
          <xs:element name="useAdvancedRetention" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RpsEmailAlertSettings">
        <xs:complexContent>
          <xs:extension base="ns4:emailAlertBaseSettings">
            <xs:sequence/>
            <xs:attribute name="enableEmailOnMissedJob" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmail" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnSuccess" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnMergeFailure" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnMergeSkip" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnMergeSuccess" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnRecoveryPointCheckFailure" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnHostNotFound" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnDataStoreNotEnough" type="xs:boolean" use="required"/>
            <xs:attribute name="enableEmailOnLicensefailure" type="xs:boolean" use="required"/>
            <xs:attribute name="enableSpaceNotification" type="xs:boolean" use="required"/>
            <xs:attribute name="spaceMeasureNum" type="xs:double" use="required"/>
            <xs:attribute name="spaceMeasureUnit" type="xs:string"/>
            <xs:attribute name="notifyOnNewUpdates" type="xs:boolean" use="required"/>
            <xs:attribute name="enableSrmPkiAlert" type="xs:boolean" use="required"/>
            <xs:attribute name="cpuThreshold" type="xs:int" use="required"/>
            <xs:attribute name="memoryThreshold" type="xs:int" use="required"/>
            <xs:attribute name="diskThreshold" type="xs:int" use="required"/>
            <xs:attribute name="networkThreshold" type="xs:int" use="required"/>
            <xs:attribute name="enableDataStoreSpaceNotification" type="xs:boolean" use="required"/>
            <xs:attribute name="dataStoreSpaceMeasureNum" type="xs:double" use="required"/>
            <xs:attribute name="dataStoreSpaceMeasureUnit" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="archiveConfig">
        <xs:sequence>
          <xs:element name="schedule" type="tns:archiveSchedule" minOccurs="0"/>
          <xs:element name="source" type="tns:archive2TapeSource" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSchedule">
        <xs:sequence>
          <xs:element name="dayItems" type="ns5:dailyScheduleDetailItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archive2TapeSource">
        <xs:sequence>
          <xs:element name="sourceItems" type="tns:archiveSourceItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSourceItem">
        <xs:sequence>
          <xs:element name="configTime" type="xs:long"/>
          <xs:element name="dailyItem" type="tns:dailyItem" minOccurs="0"/>
          <xs:element name="monthlyItem" type="tns:monthlyItem" minOccurs="0"/>
          <xs:element name="weeklyItem" type="tns:weeklyItem" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dailyItem">
        <xs:complexContent>
          <xs:extension base="tns:intervalItem">
            <xs:sequence>
              <xs:element name="selectedDays" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="intervalItem">
        <xs:sequence>
          <xs:element name="bkpType" type="xs:int"/>
          <xs:element name="enabled" type="xs:boolean"/>
          <xs:element name="startTime" type="ns5:dayTime" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="monthlyItem">
        <xs:complexContent>
          <xs:extension base="tns:intervalItem">
            <xs:sequence>
              <xs:element name="dayOfMonth" type="xs:int"/>
              <xs:element name="dayOfMonthEnabled" type="xs:boolean"/>
              <xs:element name="weekDayOfMonth" type="xs:int"/>
              <xs:element name="weekNumOfMonth" type="xs:int"/>
              <xs:element name="weekOfMonthEnabled" type="xs:boolean"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="weeklyItem">
        <xs:complexContent>
          <xs:extension base="tns:intervalItem">
            <xs:sequence>
              <xs:element name="dayOfWeek" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="archiveConfiguration">
        <xs:sequence>
          <xs:element name="advanceSchedule" type="ns5:advanceSchedule" minOccurs="0"/>
          <xs:element name="archiveSources" type="tns:archiveSourceInfoConfiguration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="backupVolumes" type="ns4:backupVolumes" minOccurs="0"/>
          <xs:element name="cloudConfig" type="tns:archiveCloudDestInfo" minOccurs="0"/>
          <xs:element name="compressionLevel" type="xs:int" minOccurs="0"/>
          <xs:element name="encryptionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="fileVersionRetentionCount" type="xs:int"/>
          <xs:element name="filesRetentionTime" type="xs:string" minOccurs="0"/>
          <xs:element name="RRSFlag" type="xs:long"/>
          <xs:element name="retentiontime" type="xs:string" minOccurs="0"/>
          <xs:element name="selectedSourceId" type="xs:string" minOccurs="0"/>
          <xs:element name="strArchiveDestinationPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="strArchiveDestinationUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="strArchiveToDrivePath" type="xs:string" minOccurs="0"/>
          <xs:element name="strCatalogPath" type="xs:string" minOccurs="0"/>
          <xs:element name="strScheduleMode" type="xs:string" minOccurs="0"/>
          <xs:element name="bArchiveAfterBackup" type="xs:boolean"/>
          <xs:element name="bArchiveExcludeAppFiles" type="xs:boolean"/>
          <xs:element name="bArchiveExcludeSystemFiles" type="xs:boolean"/>
          <xs:element name="bArchiveToCloud" type="xs:boolean"/>
          <xs:element name="bArchiveToDrive" type="xs:boolean"/>
          <xs:element name="bDailyBackup" type="xs:boolean"/>
          <xs:element name="bEncryption" type="xs:boolean"/>
          <xs:element name="bMonthlyBackup" type="xs:boolean"/>
          <xs:element name="bPurgeArchiveItems" type="xs:boolean"/>
          <xs:element name="bPurgeScheduleAvailable" type="xs:boolean"/>
          <xs:element name="bWeeklyBackup" type="xs:boolean"/>
          <xs:element name="backupDestination" type="xs:string" minOccurs="0"/>
          <xs:element name="iArchiveAfterNBackups" type="xs:int"/>
          <xs:element name="iPurgeAfterDays" type="xs:int"/>
          <xs:element name="iSpaceUtilization" type="xs:int" minOccurs="0"/>
          <xs:element name="lPurgeStartTime" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSourceInfoConfiguration">
        <xs:sequence>
          <xs:element name="archiveSourceFiltersConfig" type="tns:archiveSourceFiltersConfiguration" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="strDisplaySourcePath" type="xs:string" minOccurs="0"/>
          <xs:element name="strSourcePath" type="xs:string" minOccurs="0"/>
          <xs:element name="bArchiveFiles" type="xs:boolean"/>
          <xs:element name="bCopyFiles" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSourceFiltersConfiguration">
        <xs:sequence>
          <xs:element name="criteriaOperator" type="xs:string" minOccurs="0"/>
          <xs:element name="filterOrCriteriaHigherValue" type="xs:string" minOccurs="0"/>
          <xs:element name="filterOrCriteriaLowerValue" type="xs:string" minOccurs="0"/>
          <xs:element name="filterOrCriteriaName" type="xs:string" minOccurs="0"/>
          <xs:element name="filterOrCriteriaType" type="xs:string" minOccurs="0"/>
          <xs:element name="isCriteria" type="xs:boolean"/>
          <xs:element name="isDefaultFilter" type="xs:boolean"/>
          <xs:element name="locFilterOrCriteriaLowerValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveCloudDestInfo">
        <xs:sequence>
          <xs:element name="accountName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudSubVendorType" type="xs:long"/>
          <xs:element name="encodedCloudBucketName" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="RRSFlag" type="xs:long"/>
          <xs:element name="cloudBucketName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudBucketRegionName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudCertificatePassword" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudCertificatePath" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudProxyPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudProxyPort" type="xs:long"/>
          <xs:element name="cloudProxyRequireAuth" type="xs:boolean"/>
          <xs:element name="cloudProxyServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudProxyUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudUseProxy" type="xs:boolean"/>
          <xs:element name="cloudVendorHostName" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudVendorPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudVendorPort" type="xs:long"/>
          <xs:element name="cloudVendorType" type="xs:long"/>
          <xs:element name="cloudVendorURL" type="xs:string" minOccurs="0"/>
          <xs:element name="cloudVendorUserName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="checkUserByUUID">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="checkUserByUUIDResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getJobHistory">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
          <xs:element name="arg1" type="xs:int"/>
          <xs:element name="arg2" type="tns:flashJobHistoryFilter" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="flashJobHistoryFilter">
        <xs:sequence>
          <xs:element name="agentNodeUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="jobID" type="xs:long"/>
          <xs:element name="jobStatus" type="xs:int"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getJobHistoryResponse">
        <xs:sequence>
          <xs:element name="return" type="ns7:FlashJobHistoryResult" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="flashJobHistory">
        <xs:sequence>
          <xs:element name="datastoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="jobDisposeNode" type="xs:string" minOccurs="0"/>
          <xs:element name="jobDisposeNodeUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="jobId" type="xs:long"/>
          <xs:element name="jobLocalEndTime" type="xs:string" minOccurs="0"/>
          <xs:element name="jobLocalStartTime" type="xs:string" minOccurs="0"/>
          <xs:element name="jobMethod" type="xs:long"/>
          <xs:element name="jobName" type="xs:string" minOccurs="0"/>
          <xs:element name="jobRunningNode" type="xs:string" minOccurs="0"/>
          <xs:element name="jobRunningNodeUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="jobStatus" type="xs:long"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="jobUTCEndTime" type="xs:string" minOccurs="0"/>
          <xs:element name="jobUTCStartTime" type="xs:string" minOccurs="0"/>
          <xs:element name="planUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="sourceUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="targetDatastoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="targetPlanUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="targetUUID" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleActivityLogEvent">
        <xs:sequence>
          <xs:element name="arg0" type="tns:activityLogEvent" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="activityLogEvent">
        <xs:complexContent>
          <xs:extension base="tns:flashEvent">
            <xs:sequence>
              <xs:element name="eventArg" type="tns:activityLogArg" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="flashEvent">
        <xs:sequence>
          <xs:element name="flashEventType" type="tns:eventType" minOccurs="0"/>
          <xs:element name="serverUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="source" type="tns:source" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="activityLogArg">
        <xs:complexContent>
          <xs:extension base="tns:baseEventArg">
            <xs:sequence>
              <xs:element name="listenerType" type="tns:listenerType" minOccurs="0"/>
              <xs:element name="logs" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="baseEventArg">
        <xs:sequence>
          <xs:element name="runningOnRPS" type="xs:boolean"/>
          <xs:element name="runningServerUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="serverUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="vmInstanceUuid" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleActivityLogEventResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="cancelJob">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:long"/>
          <xs:element name="arg2" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="cancelJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicyList">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRPSPolicyListResponse">
        <xs:sequence>
          <xs:element name="return" type="ns4:rpsPolicy4D2D" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitConversion">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitConversionResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDefaultJobHistoryFilter">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getDefaultJobHistoryFilterResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:flashJobHistoryFilter" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreInfo4Lightintegration">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreInfo4LightintegrationResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:DataStoreInfo" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="DataStoreInfo">
        <xs:sequence/>
        <xs:attribute name="dsID" type="xs:string"/>
        <xs:attribute name="fullBackupDestination" type="xs:string"/>
        <xs:attribute name="desUser" type="xs:string"/>
        <xs:attribute name="desPassword" type="xs:string"/>
        <xs:attribute name="dsPassword" type="xs:string"/>
        <xs:attribute name="dsCommonPath" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="submitFSOndemandCatalogJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:catalogJobPara" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="catalogJobPara">
        <xs:sequence>
          <xs:element name="agentName" type="xs:string" minOccurs="0"/>
          <xs:element name="agentSID" type="xs:string" minOccurs="0"/>
          <xs:element name="agentUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="backupDestination" type="xs:string" minOccurs="0"/>
          <xs:element name="currentAgent" type="xs:string" minOccurs="0"/>
          <xs:element name="currentAgentSID" type="xs:string" minOccurs="0"/>
          <xs:element name="currentAgentUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="currentCatalogStatus" type="xs:long"/>
          <xs:element name="dataStoreName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="destPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="destUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="encryptionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="grtEdbList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsHttp" type="xs:boolean"/>
          <xs:element name="rpsPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsPort" type="xs:int"/>
          <xs:element name="rpsServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="sessionNumber" type="xs:long"/>
          <xs:element name="subSessionNumber" type="xs:long"/>
          <xs:element name="userName" type="xs:string" minOccurs="0"/>
          <xs:element name="vmInstanceUUID" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="submitFSOndemandCatalogJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsSubmitLinuxBaseJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:linuxBaseJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="linuxBaseJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArgWithSourceInfo">
            <xs:sequence>
              <xs:element name="jobuuid" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="rpsSubmitLinuxBaseJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitBMRJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:baseJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitBMRJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="canBMRJobRun">
        <xs:sequence>
          <xs:element name="arg0" type="tns:baseJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="canBMRJobRunResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="DataStoreUpdateDSPathStatus">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="DataStoreUpdateDSPathStatusResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="RegisterD2DToRPS">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RegisterD2DToRPSResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getActivityLogs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
          <xs:element name="arg1" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getActivityLogsResponse">
        <xs:sequence>
          <xs:element name="return" type="ns2:ActivityLogResult" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleDataSyncEvent">
        <xs:sequence>
          <xs:element name="arg0" type="tns:dataSyncEvent" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dataSyncEvent">
        <xs:complexContent>
          <xs:extension base="tns:flashEvent">
            <xs:sequence>
              <xs:element name="eventArg" type="tns:dataSyncEventArg" minOccurs="0"/>
              <xs:element name="eventType" type="tns:dataSyncEventType" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="dataSyncEventArg">
        <xs:complexContent>
          <xs:extension base="tns:baseEventArg">
            <xs:sequence>
              <xs:element name="dataRecord" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="handleDataSyncEventResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitBackup">
        <xs:sequence>
          <xs:element name="arg0" type="tns:backupJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="backupJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArgWithSourceInfo">
            <xs:sequence>
              <xs:element name="jobMethod" type="xs:int"/>
              <xs:element name="enableCatalog" type="xs:boolean"/>
              <xs:element name="periodRetentionFlag" type="xs:int"/>
              <xs:element name="scheduledTime" type="xs:long"/>
              <xs:element name="archiveConfig" type="tns:archiveConfiguration" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="RPSSubmitBackupResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSWaitingJobsByType">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSWaitingJobsByTypeResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateDest">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
          <xs:element name="arg3" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateDestResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicy4D2D">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSPolicy4D2DResponse">
        <xs:sequence>
          <xs:element name="return" type="ns4:rpsPolicy4D2D" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitInstantVM">
        <xs:sequence>
          <xs:element name="arg0" type="tns:ivmJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ivmJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArgWithSourceInfo">
            <xs:sequence>
              <xs:element name="instantVMConfig" type="tns:instantVMConfig" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="instantVMConfig">
        <xs:sequence>
          <xs:element name="IVMJobUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="JobID" type="xs:long"/>
          <xs:element name="JobType" type="xs:int"/>
          <xs:element name="NodeUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="NodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="nodeHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="HypervisorType" type="tns:hypervisorType" minOccurs="0"/>
          <xs:choice minOccurs="0">
            <xs:element name="HYPERV" type="tns:hyperVInfo"/>
            <xs:element name="VMWARE" type="tns:vmWareInfo"/>
          </xs:choice>
          <xs:element name="VMConfigPath" type="xs:string" minOccurs="0"/>
          <xs:element name="InstantVMNodes" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="InstantVMNode" type="tns:instantVMNode" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="PerformHydration" type="xs:boolean"/>
          <xs:element name="NeedPowerOn" type="xs:boolean"/>
          <xs:element name="StartTime" type="xs:long"/>
          <xs:element name="ProcessPID" type="xs:long"/>
          <xs:element name="CurrentNodeUniqueID" type="xs:string" minOccurs="0"/>
          <xs:element name="ProxyHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="JobStatus" type="xs:long"/>
          <xs:element name="DiskType" type="xs:int"/>
          <xs:element name="NeedInstallNFSFeature" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="hyperVInfo">
        <xs:complexContent>
          <xs:extension base="tns:hypervisorInfo">
            <xs:sequence>
              <xs:element name="Cluster" type="xs:boolean"/>
              <xs:element name="ClusterNodeName" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="hypervisorInfo">
        <xs:sequence>
          <xs:element name="Hostname" type="xs:string" minOccurs="0"/>
          <xs:element name="Domain" type="xs:string" minOccurs="0"/>
          <xs:element name="UserName" type="xs:string" minOccurs="0"/>
          <xs:element name="Password" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="vmWareInfo">
        <xs:complexContent>
          <xs:extension base="tns:hypervisorInfo">
            <xs:sequence>
              <xs:element name="ESXHost" type="xs:string" minOccurs="0"/>
              <xs:element name="ESXHostRefID" type="xs:string" minOccurs="0"/>
              <xs:element name="Port" type="xs:long"/>
              <xs:element name="Protocol" type="xs:string" minOccurs="0"/>
              <xs:element name="ResourcePool" type="xs:string" minOccurs="0"/>
              <xs:element name="ResourcePoolRefID" type="xs:string" minOccurs="0"/>
              <xs:element name="Datacenter" type="xs:string" minOccurs="0"/>
              <xs:element name="DatacenterRefID" type="xs:string" minOccurs="0"/>
              <xs:element name="Redirection" type="xs:boolean"/>
              <xs:element name="RedirectDatastore" type="xs:string" minOccurs="0"/>
              <xs:element name="Cluster" type="xs:boolean"/>
              <xs:element name="ClusterName" type="xs:string" minOccurs="0"/>
              <xs:element name="ClusterRefID" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="instantVMNode">
        <xs:sequence>
          <xs:element name="NodeUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="NodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="nodeHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="SessionInfo" type="tns:sessionInfo" minOccurs="0"/>
          <xs:element name="VMInfo" type="tns:vmInfo" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="sessionInfo">
        <xs:sequence>
          <xs:element name="SessionUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="SessionNumber" type="xs:string" minOccurs="0"/>
          <xs:element name="SessionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="BackupDestination" type="xs:string" minOccurs="0"/>
          <xs:element name="Hostname" type="xs:string" minOccurs="0"/>
          <xs:element name="Domain" type="xs:string" minOccurs="0"/>
          <xs:element name="UserName" type="xs:string" minOccurs="0"/>
          <xs:element name="Password" type="xs:string" minOccurs="0"/>
          <xs:element name="RPSSession" type="xs:boolean"/>
          <xs:element name="backupOperatorHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="backupOperatorUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="backupOperatorPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="backupOperatorProtocol" type="xs:string" minOccurs="0"/>
          <xs:element name="backupOperatorPort" type="xs:long"/>
          <xs:element name="backupOperatorUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="backupOperatorAuthID" type="xs:string" minOccurs="0"/>
          <xs:element name="RpsDatastoreUUID" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="vmInfo">
        <xs:sequence>
          <xs:element name="VMDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="NeedChangeHostname" type="xs:boolean"/>
          <xs:element name="NewHostname" type="xs:string" minOccurs="0"/>
          <xs:element name="DomainAccount" type="xs:string" minOccurs="0"/>
          <xs:element name="DomainPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="VMNamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="KeepSameCPUAndMemory" type="xs:boolean"/>
          <xs:element name="CPU" type="xs:long"/>
          <xs:element name="MemorySize" type="xs:long"/>
          <xs:element name="Networks" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="NetworkInfo" type="tns:networkInfo" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="UseRecommendedNetworkAdapterType" type="xs:boolean"/>
          <xs:element name="VMUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="AliveCheckType" type="xs:int"/>
          <xs:element name="AliveCheckEnabled" type="xs:boolean"/>
          <xs:element name="AliveCheckStatus" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="AliveCheckItem" type="tns:aliveCheckItem" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="AliveTimeoutSeconds" type="xs:long"/>
          <xs:element name="VolumeDriveLetterMap" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="VolumeMapItem" type="tns:volumeDriveLetterMap" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="DNSUpdaterParameters" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DNSUpdaterParameter" type="tns:dnsUpdaterParameter" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="VMPath" type="xs:string" minOccurs="0"/>
          <xs:element name="UEFI" type="xs:boolean"/>
          <xs:element name="SnapshotDiskFileInfos" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element ref="tns:DiskFileInfo" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="LastErrorMessage" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="networkInfo">
        <xs:sequence>
          <xs:element name="Connected" type="xs:boolean"/>
          <xs:element name="AdapterType" type="xs:string" minOccurs="0"/>
          <xs:element name="AdapterName" type="xs:string" minOccurs="0"/>
          <xs:element name="MACAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="NetworkLabel" type="xs:string" minOccurs="0"/>
          <xs:element name="AdapterDescription" type="xs:string" minOccurs="0"/>
          <xs:element name="VirtualNetwork" type="xs:string" minOccurs="0"/>
          <xs:element name="VirtualNetworkID" type="xs:string" minOccurs="0"/>
          <xs:element name="VDS" type="xs:boolean"/>
          <xs:element name="DHCP" type="xs:boolean"/>
          <xs:element name="AlternateIPConfig" type="tns:alternateIPConfig" minOccurs="0"/>
          <xs:element name="DynamicDNS" type="xs:boolean"/>
          <xs:element name="AdvancedIPConfig" type="tns:advancedIPConfig" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="alternateIPConfig">
        <xs:sequence>
          <xs:element name="AutoPrivateIPAddress" type="xs:boolean"/>
          <xs:element name="IP" type="xs:string" minOccurs="0"/>
          <xs:element name="SubnetMask" type="xs:string" minOccurs="0"/>
          <xs:element name="Gateway" type="xs:string" minOccurs="0"/>
          <xs:element name="PreferredDNS" type="xs:string" minOccurs="0"/>
          <xs:element name="AlternateDNS" type="xs:string" minOccurs="0"/>
          <xs:element name="PreferredWINS" type="xs:string" minOccurs="0"/>
          <xs:element name="AlternateWINS" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="advancedIPConfig">
        <xs:sequence>
          <xs:element name="DNSes" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DNS" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Gateways" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Gateway" type="tns:InstantVMGateway" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="WINs" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="WIN" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="IPAddresses" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="IPAddressInfo" type="tns:InstantVMIPAddressInfo" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="InstantVMGateway">
        <xs:sequence>
          <xs:element name="GatewayAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="GatewayMetric" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="InstantVMIPAddressInfo">
        <xs:sequence>
          <xs:element name="IP" type="xs:string" minOccurs="0"/>
          <xs:element name="Subnet" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="aliveCheckItem">
        <xs:sequence>
          <xs:element name="Type" type="xs:int"/>
          <xs:element name="Status" type="xs:int"/>
          <xs:element name="Timestamp" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="volumeDriveLetterMap">
        <xs:sequence/>
        <xs:attribute name="VolumePath" type="xs:string"/>
        <xs:attribute name="DriveLetter" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="dnsUpdaterParameter">
        <xs:sequence>
          <xs:element name="dns" type="xs:string" minOccurs="0"/>
          <xs:element name="hostname" type="xs:string" minOccurs="0"/>
          <xs:element name="hostIp" type="xs:string" minOccurs="0"/>
          <xs:element name="ttl" type="xs:int"/>
          <xs:element name="username" type="xs:string" minOccurs="0"/>
          <xs:element name="credential" type="xs:string" minOccurs="0"/>
          <xs:element name="keyFile" type="xs:string" minOccurs="0"/>
          <xs:element name="dnsServerType" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="diskFileInfo">
        <xs:sequence/>
        <xs:attribute name="DiskFileGuid" type="xs:string"/>
        <xs:attribute name="DiskFilePath" type="xs:string"/>
        <xs:attribute name="HasBootVolume" type="xs:boolean" use="required"/>
        <xs:attribute name="HasSystemVolume" type="xs:boolean" use="required"/>
        <xs:attribute name="Size" type="xs:long" use="required"/>
      </xs:complexType>

      <xs:complexType name="RPSSubmitInstantVMResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveCatalogItemsCount">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="tns:archiveDestinationConfig" minOccurs="0"/>
          <xs:element name="arg3" type="xs:string" minOccurs="0"/>
          <xs:element name="arg4" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveDestinationConfig">
        <xs:sequence>
          <xs:element name="cloudConfig" type="tns:archiveCloudDestInfo" minOccurs="0"/>
          <xs:element name="strArchiveDestinationPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="strArchiveDestinationUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="strArchiveToDrivePath" type="xs:string" minOccurs="0"/>
          <xs:element name="bArchiveToCloud" type="xs:boolean"/>
          <xs:element name="bArchiveToDrive" type="xs:boolean"/>
          <xs:element name="strHostname" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveCatalogItemsCountResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSServerID">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRPSServerIDResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getBackupD2DList">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getBackupD2DListResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:BackupD2D" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveDestinationItems">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="tns:archiveDestinationConfig" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveDestinationItemsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:archiveDestinationVolumeConfig" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveDestinationVolumeConfig">
        <xs:sequence>
          <xs:element name="catalogFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="childrenCount" type="xs:long"/>
          <xs:element name="displayName" type="xs:string" minOccurs="0"/>
          <xs:element name="guid" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="volDataSize" type="xs:long"/>
          <xs:element name="volumeHandle" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getMappedNetworkPath">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getMappedNetworkPathResponse">
        <xs:sequence>
          <xs:element name="return" type="ns5:networkPath" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleDatastoreStatusChangeEvent">
        <xs:sequence>
          <xs:element name="arg0" type="tns:datastoreStatusChangeEvent" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="datastoreStatusChangeEvent">
        <xs:complexContent>
          <xs:extension base="tns:flashEvent">
            <xs:sequence>
              <xs:element name="changedStatusArgs" type="tns:datastoreStatusChangeEventArg" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="datastoreStatusChangeEventArg">
        <xs:complexContent>
          <xs:extension base="tns:baseEventArg">
            <xs:sequence>
              <xs:element name="dataStoreStatus" type="tns:dataStoreStatus" minOccurs="0"/>
              <xs:element name="datastoreUuid" type="xs:string" minOccurs="0"/>
              <xs:element name="elapsedTimeInSec" type="xs:long"/>
              <xs:element name="estRemainTimeInSec" type="xs:long"/>
              <xs:element name="faultBean" type="tns:edgeServiceFaultBean" minOccurs="0"/>
              <xs:element name="state" type="tns:dataStoreRunningState" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="dataStoreStatus">
        <xs:sequence>
          <xs:element name="commonStoreStatus" type="tns:dataStoreCommonStatus" minOccurs="0"/>
          <xs:element name="compressDataSize" type="xs:long"/>
          <xs:element name="elapsedTimeInSec" type="xs:long"/>
          <xs:element name="enableGDD" type="xs:long"/>
          <xs:element name="estRemainTimeInSec" type="xs:long"/>
          <xs:element name="flags" type="xs:long"/>
          <xs:element name="GDDStoreStatus" type="tns:dedupInstanceStatus" minOccurs="0"/>
          <xs:element name="overallHealthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
          <xs:element name="overallHealthStatusMessage" type="xs:string" minOccurs="0"/>
          <xs:element name="overallStatus" type="xs:long"/>
          <xs:element name="statusErrorCode" type="xs:long"/>
          <xs:element name="statusErrorMessage" type="xs:string" minOccurs="0"/>
          <xs:element name="timeStamp" type="xs:long"/>
          <xs:element name="totalSrcDataSize" type="xs:long"/>
          <xs:element name="uniqueDataSize" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dataStoreCommonStatus">
        <xs:sequence>
          <xs:element name="DataVolumeTotalSize" type="xs:long"/>
          <xs:element name="DataVolumeFreeSize" type="xs:long"/>
          <xs:element name="DataDirSize" type="xs:long"/>
          <xs:element name="DataVolumeUsedSize" type="xs:long"/>
          <xs:element name="healthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dedupInstanceStatus">
        <xs:sequence>
          <xs:element name="Flags" type="xs:long"/>
          <xs:element name="PortRangeBegin" type="xs:long"/>
          <xs:element name="PortRangeEnd" type="xs:long"/>
          <xs:element name="PrimaryRoleStatus" type="tns:dedupPrimaryRoleStatus" minOccurs="0"/>
          <xs:element name="HashRoleStatusArray" type="tns:dedupHashRoleStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="DataRoleStatusArray" type="tns:dedupDataRoleStatus" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dedupPrimaryRoleStatus">
        <xs:sequence>
          <xs:element name="healthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
          <xs:element name="indexDirSize" type="xs:long"/>
          <xs:element name="indexVolumeFreeSize" type="xs:long"/>
          <xs:element name="indexVolumeTotalSize" type="xs:long"/>
          <xs:element name="indexVolumeUsedSize" type="xs:long"/>
          <xs:element name="jobStatus" type="xs:int"/>
          <xs:element name="roleCurrentState" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dedupHashRoleStatus">
        <xs:sequence>
          <xs:element name="dsMemhealthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
          <xs:element name="hashDirMinRequireSize" type="xs:long"/>
          <xs:element name="hashDirSize" type="xs:long"/>
          <xs:element name="hashVolumeFreeSize" type="xs:long"/>
          <xs:element name="hashVolumeTotalSize" type="xs:long"/>
          <xs:element name="hashVolumeUsedSize" type="xs:long"/>
          <xs:element name="memAvailSize" type="xs:long"/>
          <xs:element name="memMinRequireSize" type="xs:long"/>
          <xs:element name="memTotalSize" type="xs:long"/>
          <xs:element name="memUsedByHashRole" type="xs:long"/>
          <xs:element name="pathHealthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
          <xs:element name="roleCurrentState" type="xs:int"/>
          <xs:element name="sysMemhealthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dedupDataRoleStatus">
        <xs:sequence>
          <xs:element name="dataDirSize" type="xs:long"/>
          <xs:element name="dataVolumeFreeSize" type="xs:long"/>
          <xs:element name="dataVolumeTotalSize" type="xs:long"/>
          <xs:element name="dataVolumeUsedSize" type="xs:long"/>
          <xs:element name="healthStatus" type="tns:dataStoreHealthStatus" minOccurs="0"/>
          <xs:element name="roleCurrentState" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="edgeServiceFaultBean">
        <xs:sequence>
          <xs:element name="code" type="xs:string" minOccurs="0"/>
          <xs:element name="faultType" type="tns:faultType" minOccurs="0"/>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="messageParameters" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleDatastoreStatusChangeEventResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateUserByUUID">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateUserByUUIDResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleD2DIPChange">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleD2DIPChangeResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="UnRegisterD2DFromRPS">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="UnRegisterD2DFromRPSResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="reportBMRJobMonitor">
        <xs:sequence>
          <xs:element name="arg0" type="ns5:jobMonitor" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="vmSnapshotsInfo">
        <xs:sequence>
          <xs:element name="snapGuid" type="xs:string" minOccurs="0"/>
          <xs:element name="sessionName" type="xs:string" minOccurs="0"/>
          <xs:element name="sessionGuid" type="xs:string" minOccurs="0"/>
          <xs:element name="timestamp" type="xs:long"/>
          <xs:element name="localTime" type="xs:string" minOccurs="0"/>
          <xs:element name="snapNo" type="xs:long"/>
          <xs:element name="bootableSnapGuid" type="xs:string" minOccurs="0"/>
          <xs:element name="isPowerOffBackup" type="xs:boolean"/>
          <xs:element name="desc" type="xs:string" minOccurs="0"/>
          <xs:element name="timeZoneOffset" type="xs:long"/>
          <xs:element name="ipSettings" type="tns:ipSetting" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="isPowerOnWithIPSettings" type="xs:boolean"/>
          <xs:element name="dnsParameters" type="tns:dnsUpdaterParameters" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ipSetting">
        <xs:sequence>
          <xs:element name="autoDNS" type="xs:boolean"/>
          <xs:element name="autoWins" type="xs:boolean"/>
          <xs:element name="dhcp" type="xs:boolean"/>
          <xs:element name="dnses" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="gateways" type="tns:gateway" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="ipAddresses" type="tns:ipAddressInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="nicType" type="xs:string" minOccurs="0"/>
          <xs:element name="version" type="xs:string" minOccurs="0"/>
          <xs:element name="virtualNetwork" type="xs:string" minOccurs="0"/>
          <xs:element name="wins" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="gateway">
        <xs:sequence>
          <xs:element name="gatewayAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="gatewayMetric" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ipAddressInfo">
        <xs:sequence>
          <xs:element name="ip" type="xs:string" minOccurs="0"/>
          <xs:element name="subnet" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dnsUpdaterParameters">
        <xs:sequence>
          <xs:element name="credential" type="xs:string" minOccurs="0"/>
          <xs:element name="dns" type="xs:string" minOccurs="0"/>
          <xs:element name="dnsServerType" type="xs:int"/>
          <xs:element name="hostIp" type="xs:string" minOccurs="0"/>
          <xs:element name="hostname" type="xs:string" minOccurs="0"/>
          <xs:element name="keyFile" type="xs:string" minOccurs="0"/>
          <xs:element name="ttl" type="xs:int"/>
          <xs:element name="username" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="mergeStatus">
        <xs:complexContent>
          <xs:extension base="ns5:flashJobMonitor">
            <xs:sequence>
              <xs:element name="canResume" type="xs:boolean"/>
              <xs:element name="inSchedule" type="xs:boolean"/>
              <xs:element name="jobMonitor" type="tns:mergeJobMonitor" minOccurs="0"/>
              <xs:element name="manualPause" type="xs:boolean"/>
              <xs:element name="recoverySet" type="xs:boolean"/>
              <xs:element name="rpsuuid" type="xs:string" minOccurs="0"/>
              <xs:element name="status" type="tns:status" minOccurs="0"/>
              <xs:element name="stopTimes" type="xs:int"/>
              <xs:element name="UUID" type="xs:string" minOccurs="0"/>
              <xs:element name="updateTime" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="mergeJobMonitor">
        <xs:sequence>
          <xs:element name="currentMergeRangeEnd" type="xs:int"/>
          <xs:element name="currentMergeRangeStart" type="xs:int"/>
          <xs:element name="dwCurDiskSig2Merge" type="xs:int"/>
          <xs:element name="dwCurSess2Merge" type="xs:int"/>
          <xs:element name="dwDiskCnt2Merge" type="xs:int"/>
          <xs:element name="dwDiskCntMerged" type="xs:int"/>
          <xs:element name="dwEndStart" type="xs:int"/>
          <xs:element name="dwJobID" type="xs:int"/>
          <xs:element name="dwMergeMethod" type="xs:int"/>
          <xs:element name="dwMergeOpt" type="xs:int"/>
          <xs:element name="dwMergePhase" type="xs:int"/>
          <xs:element name="dwRetentionCnt" type="xs:int"/>
          <xs:element name="dwSessCnt2Merge" type="xs:int"/>
          <xs:element name="dwSessCntMerged" type="xs:int"/>
          <xs:element name="dwSessRangeCnt" type="xs:int"/>
          <xs:element name="dwSessRangeDoneCnt" type="xs:int"/>
          <xs:element name="dwSessStart" type="xs:int"/>
          <xs:element name="jobStatus" type="xs:int"/>
          <xs:element name="timeRemain" type="xs:long"/>
          <xs:element name="ullDiskBytes2Merge" type="xs:long"/>
          <xs:element name="ullDiskBytesMerged" type="xs:long"/>
          <xs:element name="ullElapsedTime" type="xs:long"/>
          <xs:element name="ullSessBytes2Merge" type="xs:long"/>
          <xs:element name="ullSessBytesMerged" type="xs:long"/>
          <xs:element name="ullStartTime" type="xs:long"/>
          <xs:element name="ullTotalBytes2Merge" type="xs:long"/>
          <xs:element name="ullTotalBytesMerged" type="xs:long"/>
          <xs:element name="VHDMerge" type="xs:boolean"/>
          <xs:element name="vmInstanceUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="fMergePercentage" type="xs:float"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="repJobMonitor">
        <xs:sequence>
          <xs:element name="currentJobCancelled" type="xs:boolean"/>
          <xs:element name="currentSnapshotCount" type="xs:int"/>
          <xs:element name="first" type="xs:boolean"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element name="nodeId" type="xs:int"/>
          <xs:element name="repElapsedTime" type="xs:long"/>
          <xs:element name="repJobElapsedTime" type="xs:long"/>
          <xs:element name="repJobID" type="xs:string" minOccurs="0"/>
          <xs:element name="repJobStartTime" type="xs:long"/>
          <xs:element name="repJobStatus" type="xs:long"/>
          <xs:element name="repPhase" type="xs:int"/>
          <xs:element name="repSessionBackupTime" type="xs:long"/>
          <xs:element name="repSessionName" type="xs:string" minOccurs="0"/>
          <xs:element name="repStartNanoTime" type="xs:long"/>
          <xs:element name="repStartTime" type="xs:long"/>
          <xs:element name="repTotalSize" type="xs:long"/>
          <xs:element name="repTransAfterResume" type="xs:long"/>
          <xs:element name="repTransBeforeResume" type="xs:long"/>
          <xs:element name="repTransedSize" type="xs:long"/>
          <xs:element name="targetMachine" type="xs:string" minOccurs="0"/>
          <xs:element name="toRepSessions" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="toRepSessionsSize" type="xs:long"/>
          <xs:element name="totalSessionNumbers" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="reportBMRJobMonitorResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="establishTrust">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="establishTrustResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSJobs">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRPSJobsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveSessions">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:int"/>
          <xs:element name="arg2" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveSessionsResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRegistedClientList">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRegistedClientListResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:BackupD2D" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getClientWaitingJobs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getClientWaitingJobsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getClientRunningJobs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getClientRunningJobsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getVersionInfo">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getVersionInfoResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsVersionInfo" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsVersionInfo">
        <xs:sequence>
          <xs:element name="buildNumber" type="xs:string" minOccurs="0"/>
          <xs:element name="majorVersion" type="xs:string" minOccurs="0"/>
          <xs:element name="minorVersion" type="xs:string" minOccurs="0"/>
          <xs:element name="updateNumber" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="pauseMerge">
        <xs:sequence>
          <xs:element name="arg0" type="tns:mergeAPISource" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="pauseMergeResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateUser">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="validateUserResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleJobHistoryEvent">
        <xs:sequence>
          <xs:element name="arg0" type="tns:jobHistoryEvent" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobHistoryEvent">
        <xs:complexContent>
          <xs:extension base="tns:flashEvent">
            <xs:sequence>
              <xs:element name="eventArg" type="tns:jobHistoryArg" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="jobHistoryArg">
        <xs:complexContent>
          <xs:extension base="tns:baseEventArg">
            <xs:sequence>
              <xs:element name="jobHistory" type="tns:flashJobHistory" minOccurs="0"/>
              <xs:element name="jobHistoryRecord" type="xs:string" minOccurs="0"/>
              <xs:element name="listenerType" type="tns:listenerType" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="handleJobHistoryEventResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRegistedClientByDatastore">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRegistedClientByDatastoreResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:BackupD2D" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSWaitingJobs">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSWaitingJobsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="queryCatalogStatus">
        <xs:sequence>
          <xs:element name="arg0" type="tns:rpsCatalogJobQueryItem" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsCatalogJobQueryItem">
        <xs:sequence>
          <xs:element name="backupDest" type="xs:string" minOccurs="0"/>
          <xs:element name="clientuuid" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="domain" type="xs:string" minOccurs="0"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="statusItem" type="tns:rpsCatalogStatusItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="userName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsCatalogStatusItem">
        <xs:sequence>
          <xs:element name="catalogStatus" type="xs:long"/>
          <xs:element name="sessnum" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="queryCatalogStatusResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsCatalogStatusItem" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreStatus">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreStatusResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:dataStoreStatusListElem" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dataStoreStatusListElem">
        <xs:sequence>
          <xs:element name="associatedPlan" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="dataStoreSetting" type="tns:dataStoreSettingInfo" minOccurs="0"/>
          <xs:element name="dataStoreStatus" type="tns:dataStoreStatus" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="generateBackupInfoDB">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="generateBackupInfoDBResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveCatalogItems">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="tns:archiveDestinationConfig" minOccurs="0"/>
          <xs:element name="arg3" type="xs:string" minOccurs="0"/>
          <xs:element name="arg4" type="xs:string" minOccurs="0"/>
          <xs:element name="arg5" type="xs:long"/>
          <xs:element name="arg6" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getArchiveCatalogItemsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:archiveCatalogItem" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveCatalogItem">
        <xs:sequence>
          <xs:element name="childrenCount" type="xs:long" minOccurs="0"/>
          <xs:element name="fullPath" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="path" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:int" minOccurs="0"/>
          <xs:element name="versionsCount" type="xs:long"/>
          <xs:element name="volumeHandle" type="xs:long" minOccurs="0"/>
          <xs:element name="fileVersionsList" type="tns:archiveFileVerionDetail" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveFileVerionDetail">
        <xs:sequence>
          <xs:element name="archivedTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="archivedTimeZoneOffset" type="xs:long"/>
          <xs:element name="fileSize" type="xs:long"/>
          <xs:element name="fileType" type="xs:int"/>
          <xs:element name="modifiedTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="modifiedTimeZoneOffset" type="xs:long"/>
          <xs:element name="version" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitArchiveJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:archiveJobArg" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveJobArg">
        <xs:complexContent>
          <xs:extension base="tns:baseJobArg">
            <xs:sequence>
              <xs:element name="jobScript" type="tns:archiveJobScript" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="archiveJobScript">
        <xs:sequence>
          <xs:element name="ulVersion" type="xs:int"/>
          <xs:element name="ulShrMemID" type="xs:long"/>
          <xs:element name="usJobType" type="xs:int"/>
          <xs:element name="nNodeItems" type="xs:int"/>
          <xs:element name="pAFNodeList" type="tns:jobScriptArchiveNode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="backupDestinationPath" type="xs:string" minOccurs="0"/>
          <xs:element name="backupUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="backupPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="ArchiveDiskDestInfo" type="tns:archiveDiskDestInfo" minOccurs="0"/>
          <xs:element name="ArchiveCloudDestInfo" type="tns:archiveCloudDestInfo" minOccurs="0"/>
          <xs:element name="dwArchiveDestType" type="xs:long"/>
          <xs:element name="pwszComments" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszBeforeJob" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszAfterJob" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszPrePostUser" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszPrePostPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="EncryptionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="lEncryption" type="xs:long"/>
          <xs:element name="usPreExitCode" type="xs:int"/>
          <xs:element name="usJobMethod" type="xs:int"/>
          <xs:element name="usRestPoint" type="xs:int"/>
          <xs:element name="fOptions" type="xs:int"/>
          <xs:element name="dwCompressionLevel" type="xs:long"/>
          <xs:element name="dwJobHistoryDays" type="xs:long"/>
          <xs:element name="dwArchiveLogDays" type="xs:long"/>
          <xs:element name="purgeFileBeforeLowDate" type="xs:long"/>
          <xs:element name="purgeFileBeforeHighDate" type="xs:long"/>
          <xs:element name="productType" type="xs:long"/>
          <xs:element name="vmInstanceUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="ftFileMergeDate" type="xs:long"/>
          <xs:element name="pwszCatalogDirPath" type="xs:string" minOccurs="0"/>
          <xs:element name="pArchivePolicy" type="tns:archivePolicy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFileCopyPolicy" type="tns:fileCopyPolicy" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="dwDestinationAccountId" type="xs:int"/>
          <xs:element name="pwszBackupEncrptionPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="dwBackupEncryptionMethod" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobScriptArchiveNode">
        <xs:sequence>
          <xs:element name="FOptions" type="xs:int"/>
          <xs:element name="NFilterItems" type="xs:int"/>
          <xs:element name="NVolumeApp" type="xs:int"/>
          <xs:element name="PRestoreVolumeAppList" type="tns:jobScriptArchiveRestoreVolApp" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pwszNodeAddr" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszSessPath" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszUserName" type="xs:string" minOccurs="0"/>
          <xs:element name="pwszUserPW" type="xs:string" minOccurs="0"/>
          <xs:element name="ulSessNum" type="xs:int"/>
          <xs:element name="pArchiveVolumeList" type="tns:archiveSource" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobScriptArchiveRestoreVolApp">
        <xs:sequence>
          <xs:element name="filterCount" type="xs:long"/>
          <xs:element name="filterList" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="path" type="xs:string" minOccurs="0"/>
          <xs:element name="destItemCount" type="xs:long"/>
          <xs:element name="destItemList" type="tns:archiveVolItemAppComp" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="destVolumName" type="xs:string" minOccurs="0"/>
          <xs:element name="fOption" type="xs:long"/>
          <xs:element name="fileSystem" type="xs:long"/>
          <xs:element name="onConflictMethod" type="xs:long"/>
          <xs:element name="subSessionNum" type="xs:long"/>
          <xs:element name="volItemAppComp" type="xs:long"/>
          <xs:element name="volItemAppCompList" type="tns:archiveVolItemAppComp" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveVolItemAppComp">
        <xs:sequence>
          <xs:element name="fOptions" type="xs:int"/>
          <xs:element name="fileVersion" type="xs:int"/>
          <xs:element name="fileorDirFullPath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSource">
        <xs:sequence>
          <xs:element name="volItemAppComp" type="xs:long"/>
          <xs:element name="fOptions" type="xs:long"/>
          <xs:element name="pBackupVolumeList" type="tns:jobScriptArchiveBackupVolApp" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="volName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobScriptArchiveBackupVolApp">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="archiveDiskDestInfo">
        <xs:sequence>
          <xs:element name="archiveDiskDestPath" type="xs:string" minOccurs="0"/>
          <xs:element name="archiveDiskPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="archiveDiskUserName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archivePolicy">
        <xs:sequence>
          <xs:element name="szSourceFolder" type="xs:string" minOccurs="0"/>
          <xs:element name="pFileFilters" type="tns:archiveSourceFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFileSizeFilters" type="tns:archiveSizeFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFileTimeFilters" type="tns:archiveTimeRangeFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFolderFilters" type="tns:archiveSourceFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSourceFilter">
        <xs:sequence>
          <xs:element name="pszFilterDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="pszFilterName" type="xs:string" minOccurs="0"/>
          <xs:element name="nInclExcl" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveSizeFilter">
        <xs:sequence>
          <xs:element name="fileSize1" type="xs:long"/>
          <xs:element name="fileSize2" type="xs:long"/>
          <xs:element name="nCompareType" type="xs:int"/>
          <xs:element name="nInclExcl" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="archiveTimeRangeFilter">
        <xs:sequence>
          <xs:element name="llTimeElapsed" type="xs:long"/>
          <xs:element name="ulEndTime" type="xs:long"/>
          <xs:element name="ulStartTime" type="xs:long"/>
          <xs:element name="nCompareType" type="xs:int"/>
          <xs:element name="nDateType" type="xs:int"/>
          <xs:element name="nInclExcl" type="xs:int"/>
          <xs:element name="nTimeUnit" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="fileCopyPolicy">
        <xs:sequence>
          <xs:element name="szSourceFolder" type="xs:string" minOccurs="0"/>
          <xs:element name="pFileFilters" type="tns:archiveSourceFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFileSizeFilters" type="tns:archiveSizeFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="pFolderFilters" type="tns:archiveSourceFilter" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSSubmitArchiveJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="login">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="loginResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getAllArchiveCatalogItems">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
          <xs:element name="arg2" type="tns:archiveDestinationConfig" minOccurs="0"/>
          <xs:element name="arg3" type="xs:string" minOccurs="0"/>
          <xs:element name="arg4" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getAllArchiveCatalogItemsResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:archiveCatalogItem" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="resumeMerge">
        <xs:sequence>
          <xs:element name="arg0" type="tns:mergeAPISource" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="resumeMergeResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getJobMonitorsByD2DUuidAndType">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getJobMonitorsByD2DUuidAndTypeResponse">
        <xs:sequence>
          <xs:element name="return" type="ns5:flashJobMonitor" form="qualified" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="rpsSubmitLinuxBackupJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:linuxBackupJobArg" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="linuxBackupJobArg">
        <xs:complexContent>
          <xs:extension base="tns:linuxBaseJobArg">
            <xs:sequence>
              <xs:element name="advanceSessionType" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="rpsSubmitLinuxBackupJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="UnRegisterD2DListFromRPS">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="UnRegisterD2DListFromRPSResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSCancelJob">
        <xs:sequence>
          <xs:element name="arg0" type="tns:controlJobFilter" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RPSCancelJobResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="handleJobEvent">
        <xs:sequence>
          <xs:element name="arg0" type="tns:jobEvent" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobEvent">
        <xs:complexContent>
          <xs:extension base="tns:flashEvent">
            <xs:sequence>
              <xs:element name="jobMonitors" type="tns:jobEventArg" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="jobEventArg">
        <xs:complexContent>
          <xs:extension base="tns:baseEventArg">
            <xs:sequence>
              <xs:choice minOccurs="0">
                <xs:element name="JobMonitorChild" type="ns5:jobMonitor"/>
                <xs:element name="MergeStatusChild" type="tns:mergeStatus"/>
                <xs:element name="ConversionStatusChild" type="ns5:convertJobMonitor"/>
                <xs:element name="FlashJobMonitor" type="ns5:flashJobMonitor"/>
                <xs:element name="IVMJobMonitor" type="ns5:ivmJobMonitor"/>
              </xs:choice>
              <xs:element name="policyId" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="handleJobEventResponse">
        <xs:sequence>
          <xs:element ref="ns6:return"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreHealthStatus">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDataStoreHealthStatusResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:dataStoreHealthStatus" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RegisterD2DListToPolicy">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RegisterD2DListToPolicyResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RegisterAndAssignD2DListToRPS">
        <xs:sequence>
          <xs:element name="arg0" type="tns:registerNodeInfo" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="arg1" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RegisterAndAssignD2DListToRPSResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getRPSRunningJobsByType">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getRPSRunningJobsByTypeResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:rpsJobInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:simpleType name="rpsJobStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ToRun"/>
          <xs:enumeration value="Running"/>
          <xs:enumeration value="Completed"/>
          <xs:enumeration value="Waiting"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="listenerType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="THIRD_PARTY"/>
          <xs:enumeration value="CPM"/>
          <xs:enumeration value="VCM"/>
          <xs:enumeration value="HBBU"/>
          <xs:enumeration value="RPS"/>
          <xs:enumeration value="ASBU"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="eventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Default"/>
          <xs:enumeration value="ConversionJob"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="source">
        <xs:restriction base="xs:string">
          <xs:enumeration value="D2D"/>
          <xs:enumeration value="RPS"/>
          <xs:enumeration value="ASBU"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="dataSyncEventType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CustomBackupJobHistoryEvent"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="hypervisorType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN"/>
          <xs:enumeration value="HYPERV"/>
          <xs:enumeration value="VMWARE"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="dataStoreHealthStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN"/>
          <xs:enumeration value="RED"/>
          <xs:enumeration value="YELLOW"/>
          <xs:enumeration value="GREEN"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="faultType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Edge"/>
          <xs:enumeration value="D2D"/>
          <xs:enumeration value="LinuxD2D"/>
          <xs:enumeration value="RPS"/>
          <xs:enumeration value="RPSRemote"/>
          <xs:enumeration value="ASBU"/>
          <xs:enumeration value="RBAC"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="dataStoreRunningState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOTGET"/>
          <xs:enumeration value="UNKNOWN"/>
          <xs:enumeration value="STOPPED"/>
          <xs:enumeration value="STARTING"/>
          <xs:enumeration value="RUNNING"/>
          <xs:enumeration value="STOPPING"/>
          <xs:enumeration value="ABNORMAL_BLOCK_ALL"/>
          <xs:enumeration value="ABNORMAL_RESTORE_ONLY"/>
          <xs:enumeration value="DS_UNKNOWN"/>
          <xs:enumeration value="MODIFYING"/>
          <xs:enumeration value="DELETING"/>
          <xs:enumeration value="DELETED"/>
          <xs:enumeration value="MODIFY_COPYING"/>
          <xs:enumeration value="MODIFY_FAILED"/>
          <xs:enumeration value="CREATE_FAILED"/>
          <xs:enumeration value="CREATING"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="vmPowerStatus">
        <xs:restriction base="xs:string">
          <xs:enumeration value="unknown"/>
          <xs:enumeration value="suspended"/>
          <xs:enumeration value="power_on"/>
          <xs:enumeration value="power_off"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="status">
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOTRUNNING"/>
          <xs:enumeration value="PAUSED"/>
          <xs:enumeration value="PAUSED_MANUALLY"/>
          <xs:enumeration value="RUNNING"/>
          <xs:enumeration value="FAILED"/>
          <xs:enumeration value="PAUSED_NO_SCHEDULE"/>
          <xs:enumeration value="TORUNN"/>
          <xs:enumeration value="PAUSING"/>
        </xs:restriction>
      </xs:simpleType>

      <xs:simpleType name="mergeAPISource">
        <xs:restriction base="xs:string">
          <xs:enumeration value="UNKNOWN"/>
          <xs:enumeration value="MANUALLY"/>
          <xs:enumeration value="ASBU_BACKUP"/>
          <xs:enumeration value="D2D_JOBS"/>
          <xs:enumeration value="DATA_STORE"/>
        </xs:restriction>
      </xs:simpleType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://restore.data.webservice.arcflash.ca.com/xsd" xmlns:tns="http://restore.data.webservice.arcflash.ca.com/xsd" xmlns:ns9="http://webservice.arcflash.ca.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns10="http://vsphere.data.webservice.arcflash.ca.com/xsd">

      <xs:import namespace="http://webservice.arcflash.ca.com"/>

      <xs:import namespace="http://vsphere.data.webservice.arcflash.ca.com/xsd"/>

      <xs:complexType name="CopyJob">
        <xs:sequence>
          <xs:element name="sessionPath" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="destinationPath" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="userName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="password" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="nodes" type="tns:RestoreJobNode" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="jobType" type="xs:int" form="qualified"/>
          <xs:element name="fileSystemOption" type="tns:FileSystemOption" form="qualified" minOccurs="0"/>
          <xs:element name="restoreType" type="xs:int" form="qualified"/>
          <xs:element name="compressionLevel" type="xs:int" form="qualified"/>
          <xs:element name="destinationUserName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="destinationPassword" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="sessionNumber" type="xs:int" form="qualified"/>
          <xs:element name="vmUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmInstanceUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="jobLauncher" type="xs:long" form="qualified"/>
          <xs:element name="restPoint" type="xs:int" form="qualified"/>
          <xs:element name="rpsHostname" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="encryptType" type="xs:long"/>
          <xs:element name="encryptPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="encryptTypeCopySession" type="xs:long"/>
          <xs:element name="encryptPasswordCopySession" type="xs:string" minOccurs="0"/>
          <xs:element name="retainEncryptionAsSource" type="xs:boolean"/>
          <xs:element name="rpsHost" type="ns9:RPSHost" minOccurs="0"/>
          <xs:element name="rpsPolicy" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsDataStore" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsDataStoreDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreHashKey" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreJobNode">
        <xs:sequence>
          <xs:element name="sessionNumber" type="xs:int" form="qualified"/>
          <xs:element name="jobItems" type="tns:RestoreJobItem" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="encryptPassword" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreJobItem">
        <xs:sequence>
          <xs:element name="path" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="subSessionNum" type="xs:int" form="qualified"/>
          <xs:element name="entries" type="tns:RestoreJobItemEntry" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreJobItemEntry">
        <xs:sequence>
          <xs:element name="type" type="xs:int" form="qualified"/>
          <xs:element name="path" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="exchSubItems" type="ns9:restoreJobExchSubItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="adItems" type="ns9:restoreJobADItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="FileSystemOption">
        <xs:sequence>
          <xs:element name="overwriteExistingFiles" type="xs:boolean" form="qualified"/>
          <xs:element name="replaceActiveFiles" type="xs:boolean" form="qualified"/>
          <xs:element name="createBaseFolder" type="xs:boolean" form="qualified"/>
          <xs:element name="renameFile" type="xs:boolean" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreJob">
        <xs:sequence>
          <xs:element name="sessionPath" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="destinationPath" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="userName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="password" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="destUser" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="destPass" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="nodes" type="tns:RestoreJobNode" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="jobType" type="xs:int" form="qualified"/>
          <xs:element name="fileSystemOption" type="tns:FileSystemOption" form="qualified" minOccurs="0"/>
          <xs:element name="restoreType" type="xs:int" form="qualified"/>
          <xs:element name="restoreSQLNewDestList" type="tns:RestoreSQLNewDest" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="restoreExchangeOption" type="tns:RestoreExchangeOption" form="qualified" minOccurs="0"/>
          <xs:element name="exchRDBName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="recoverVMOption" type="tns:RecoverVMOption" form="qualified" minOccurs="0"/>
          <xs:element name="jobLauncher" type="xs:long" form="qualified"/>
          <xs:element name="vmInstanceUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="rpsHostname" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="rpsDataStoreName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="sourceRpsHost" type="ns9:RPSHost" form="qualified" minOccurs="0"/>
          <xs:element name="rpsPolicy" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="rpsDataStoreDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="jobId" type="xs:long" form="qualified"/>
          <xs:element name="masterJobId" type="xs:long" form="qualified"/>
          <xs:element name="restoreExchangeGRTOption" type="ns9:restoreExchangeGRTOption" minOccurs="0"/>
          <xs:element name="childVMRestoreJobList" type="tns:RestoreJob" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="adOption" type="ns9:restoreADOption" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreSQLNewDest">
        <xs:sequence>
          <xs:element name="dbPath" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="instanceName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="dbName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="newDbName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="restoreDestPath" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreExchangeOption">
        <xs:sequence>
          <xs:element name="dismounAndMountDB" type="xs:boolean" form="qualified" minOccurs="0"/>
          <xs:element name="replayLogOnDB" type="xs:boolean" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RecoverVMOption">
        <xs:sequence>
          <xs:element name="sessionNumber" type="xs:int" form="qualified"/>
          <xs:element name="overwriteExistingVM" type="xs:boolean" form="qualified"/>
          <xs:element name="generateNewVMinstID" type="xs:boolean" form="qualified"/>
          <xs:element name="powerOnAfterRestore" type="xs:boolean" form="qualified"/>
          <xs:element name="originalLocation" type="xs:boolean" form="qualified"/>
          <xs:element name="esxServerName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmDataStore" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmDataStoreId" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="restoreDiskDataStores" type="tns:RestoreDiskDataStore" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="vmName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmUsername" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmPassword" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vcName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmDiskCount" type="xs:int" form="qualified"/>
          <xs:element name="vmUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmInstanceUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmVMX" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="encryptPassword" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="resourcePoolName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vc" type="ns10:VirtualCenter" form="qualified" minOccurs="0"/>
          <xs:element name="vmNetWorkConfigs" type="ns10:VMNetworkConfig" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="registerAsClusterHyperVVM" type="xs:boolean" form="qualified"/>
          <xs:element name="cpuCount" type="xs:int" form="qualified"/>
          <xs:element name="memorySize" type="xs:long" form="qualified"/>
          <xs:element name="storagePolicyId" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="storagePolicyName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="vmIdInVApp" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="RestoreDiskDataStore">
        <xs:sequence>
          <xs:element name="disk" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="profile" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="profileId" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="dataStore" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="dataStoreId" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="diskType" type="xs:long" form="qualified"/>
          <xs:element name="quickRecovery" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://service.listener.arcflash.ca.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:element name="return" type="xs:int"/>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://activitylog.data.webservice.arcflash.ca.com/xsd" xmlns:tns="http://activitylog.data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:complexType name="ActivityLogResult">
        <xs:sequence>
          <xs:element name="logs" type="tns:ActivityLog" form="qualified" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="totalCount" type="xs:long" form="qualified"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ActivityLog">
        <xs:sequence>
          <xs:element name="message" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="time" type="xs:dateTime" form="qualified" minOccurs="0"/>
          <xs:element name="type" type="xs:int" form="qualified"/>
          <xs:element name="jobID" type="xs:long" form="qualified"/>
          <xs:element name="timeZoneOffset" type="xs:long" form="qualified"/>
          <xs:element name="d2dName" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xs:schema elementFormDefault="qualified" version="1.0" targetNamespace="http://data.webservice.arcflash.ca.com/xsd" xmlns:tns="http://data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns12="http://webservice.arcflash.ca.com" xmlns:ns11="http://webservice.arcflash.arcserve.ca.com/d2dstatus/">

      <xs:import namespace="http://webservice.arcflash.arcserve.ca.com/d2dstatus/"/>

      <xs:import namespace="http://webservice.arcflash.ca.com"/>

      <xs:complexType name="dayTime">
        <xs:sequence>
          <xs:element name="hour" type="xs:int"/>
          <xs:element name="minute" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="advanceSchedule">
        <xs:sequence>
          <xs:element name="scheduleStartTime" type="xs:long"/>
          <xs:element name="dailyScheduleDetailItems" type="tns:dailyScheduleDetailItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="periodSchedule" type="tns:periodSchedule" minOccurs="0"/>
          <xs:element name="MaxCustomizedCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dailyScheduleDetailItem">
        <xs:sequence>
          <xs:element name="dayofWeek" type="xs:int"/>
          <xs:element name="scheduleDetailItems" type="tns:scheduleDetailItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="throttleItems" type="tns:throttleItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="mergeDetailItems" type="tns:mergeDetailItem" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="scheduleDetailItem">
        <xs:sequence>
          <xs:element name="jobType" type="xs:int"/>
          <xs:element name="startTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="endTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="interval" type="xs:int"/>
          <xs:element name="intervalUnit" type="xs:int"/>
          <xs:element name="repeatEnabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="throttleItem">
        <xs:sequence>
          <xs:element name="startTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="endTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="throttleValue" type="xs:long"/>
          <xs:element name="unit" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="mergeDetailItem">
        <xs:sequence>
          <xs:element name="startTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="endTime" type="tns:dayTime" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="periodSchedule">
        <xs:sequence>
          <xs:element name="daySchedule" type="tns:everyDaySchedule" minOccurs="0"/>
          <xs:element name="weekSchedule" type="tns:everyWeekSchedule" minOccurs="0"/>
          <xs:element name="monthSchedule" type="tns:everyMonthSchedule" minOccurs="0"/>
          <xs:element name="MaxWeeklyCount" type="xs:int"/>
          <xs:element name="MaxMonthlyCount" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="everyDaySchedule">
        <xs:sequence>
          <xs:element name="generateCatalog" type="xs:boolean"/>
          <xs:element name="retentionCount" type="xs:int"/>
          <xs:element name="dayTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="bkpType" type="xs:int"/>
          <xs:element name="enabled" type="xs:boolean"/>
          <xs:element name="dayEnabled" type="xs:boolean" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="checkRecoveryPoint" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="everyWeekSchedule">
        <xs:sequence>
          <xs:element name="bkpType" type="xs:int"/>
          <xs:element name="dayOfWeek" type="xs:int"/>
          <xs:element name="enabled" type="xs:boolean"/>
          <xs:element name="dayTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="generateCatalog" type="xs:boolean"/>
          <xs:element name="retentionCount" type="xs:int"/>
          <xs:element name="checkRecoveryPoint" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="everyMonthSchedule">
        <xs:sequence>
          <xs:element name="weekDayOfMonth" type="xs:int"/>
          <xs:element name="weekNumOfMonth" type="xs:int"/>
          <xs:element name="dayOfMonth" type="xs:int"/>
          <xs:element name="dayOfMonthEnabled" type="xs:boolean"/>
          <xs:element name="weekOfMonthEnabled" type="xs:boolean"/>
          <xs:element name="bkpType" type="xs:int"/>
          <xs:element name="enabled" type="xs:boolean"/>
          <xs:element name="dayTime" type="tns:dayTime" minOccurs="0"/>
          <xs:element name="generateCatalog" type="xs:boolean"/>
          <xs:element name="retentionCount" type="xs:int"/>
          <xs:element name="checkRecoveryPoint" type="xs:boolean"/>
          <xs:element name="endTime" type="tns:dayTime" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="networkPath">
        <xs:sequence>
          <xs:element name="driverletter" type="xs:string" minOccurs="0"/>
          <xs:element name="remotePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="jobMonitor">
        <xs:complexContent>
          <xs:extension base="tns:flashJobMonitor">
            <xs:sequence>
              <xs:element name="sessionID" type="xs:long"/>
              <xs:element name="ulBeginSessID" type="xs:long"/>
              <xs:element name="ulEndSessID" type="xs:long"/>
              <xs:element name="flags" type="xs:long"/>
              <xs:element name="volMethod" type="xs:long"/>
              <xs:element name="estimateBytesJob" type="xs:long"/>
              <xs:element name="transferBytesJob" type="xs:long"/>
              <xs:element name="estimateBytesDisk" type="xs:long"/>
              <xs:element name="transferBytesDisk" type="xs:long"/>
              <xs:element name="currentProcessDiskName" type="xs:string" minOccurs="0"/>
              <xs:element name="nProgramCPU" type="xs:long"/>
              <xs:element name="nSystemCPU" type="xs:long"/>
              <xs:element name="nReadSpeed" type="xs:long"/>
              <xs:element name="nLogicSpeed" type="xs:long"/>
              <xs:element name="nWriteSpeed" type="xs:long"/>
              <xs:element name="nSystemReadSpeed" type="xs:long"/>
              <xs:element name="nSystemWriteSpeed" type="xs:long"/>
              <xs:element name="throttling" type="xs:long"/>
              <xs:element name="encInfoStatus" type="xs:long"/>
              <xs:element name="totalSizeRead" type="xs:long"/>
              <xs:element name="totalSizeWritten" type="xs:long"/>
              <xs:element name="curVolMntPoint" type="xs:string" minOccurs="0"/>
              <xs:element name="compressLevel" type="xs:long"/>
              <xs:element name="transferMode" type="xs:long"/>
              <xs:element name="ctDWBKJobID" type="xs:long"/>
              <xs:element name="ctBKStartTime" type="xs:string" minOccurs="0"/>
              <xs:element name="ctBKJobName" type="xs:string" minOccurs="0"/>
              <xs:element name="ctCurCatVol" type="xs:string" minOccurs="0"/>
              <xs:element name="dwBKSessNum" type="xs:long"/>
              <xs:element name="wzBKBackupDest" type="xs:string" minOccurs="0"/>
              <xs:element name="wzBKDestUsrName" type="xs:string" minOccurs="0"/>
              <xs:element name="wzBKDestPassword" type="xs:string" minOccurs="0"/>
              <xs:element name="wszEDB" type="xs:string" minOccurs="0"/>
              <xs:element name="wszMailFolder" type="xs:string" minOccurs="0"/>
              <xs:element name="ulTotalFolder" type="xs:long"/>
              <xs:element name="ulProcessedFolder" type="xs:long"/>
              <xs:element name="ulTotalMergedSessions" type="xs:long"/>
              <xs:element name="ulMergedSession" type="xs:long"/>
              <xs:element name="productType" type="xs:long"/>
              <xs:element name="d2DStatusInfo" type="ns11:D2DStatusInfo" minOccurs="0"/>
              <xs:element name="totalDiskCount" type="xs:long"/>
              <xs:element name="currentDiskIndex" type="xs:long"/>
              <xs:element name="rpsPolicyName" type="xs:string" minOccurs="0"/>
              <xs:element name="enableDedupe" type="xs:boolean"/>
              <xs:element name="uniqueData" type="xs:long"/>
              <xs:element name="ulReplicationSavedBandWidth" type="xs:long"/>
              <xs:element name="totalNodesNeedPurge" type="xs:long"/>
              <xs:element name="purgedNodes" type="xs:long"/>
              <xs:element name="purgingNodeName" type="xs:string" minOccurs="0"/>
              <xs:element name="totalSessionsOfPurgingNode" type="xs:long"/>
              <xs:element name="purgedSessionsOfPurgingNode" type="xs:long"/>
              <xs:element name="ulTotalVMJobCount" type="xs:long"/>
              <xs:element name="ulFinishedVMJobCount" type="xs:long"/>
              <xs:element name="ulCanceledVMJobCount" type="xs:long"/>
              <xs:element name="ulFailedVMJobCount" type="xs:long"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="flashJobMonitor">
        <xs:sequence>
          <xs:element name="jobId" type="xs:long"/>
          <xs:element name="jobType" type="xs:long"/>
          <xs:element name="jobStatus" type="xs:long"/>
          <xs:element name="startTime" type="xs:long"/>
          <xs:element name="remainTime" type="xs:long"/>
          <xs:element name="elapsedTime" type="xs:long"/>
          <xs:element name="progress" type="xs:float"/>
          <xs:element name="processing" type="xs:string" minOccurs="0"/>
          <xs:element name="jobMethod" type="xs:long"/>
          <xs:element name="jobPhase" type="xs:long"/>
          <xs:element name="finished" type="xs:boolean"/>
          <xs:element name="d2dServerName" type="xs:string" minOccurs="0"/>
          <xs:element name="vmHostName" type="xs:string" minOccurs="0"/>
          <xs:element name="jobMonitorId" type="xs:string" minOccurs="0"/>
          <xs:element name="vmInstanceUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="dataStoreUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="rpsPolicyUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="d2dUuid" type="xs:string" minOccurs="0"/>
          <xs:element name="nodeId" type="xs:int"/>
          <xs:element name="runningServerId" type="xs:int"/>
          <xs:element name="agentNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="serverNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="sourceRPSId" type="xs:int"/>
          <xs:element name="targetRPSId" type="xs:int"/>
          <xs:element name="historyProductType" type="xs:int"/>
          <xs:element name="planUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="targetPlanUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="srcRPS" type="xs:string" minOccurs="0"/>
          <xs:element name="destRPS" type="xs:string" minOccurs="0"/>
          <xs:element name="srcDataStore" type="xs:string" minOccurs="0"/>
          <xs:element name="destDataStore" type="xs:string" minOccurs="0"/>
          <xs:element name="srcCommonPath" type="xs:string" minOccurs="0"/>
          <xs:element name="destCommonPath" type="xs:string" minOccurs="0"/>
          <xs:element name="targetRpsUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="isRunningOnRPS" type="xs:boolean"/>
          <xs:element name="isLinuxNode" type="xs:boolean"/>
          <xs:element name="isOnDemand" type="xs:boolean"/>
          <xs:element name="jobUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="jobSubStatus" type="xs:long"/>
          <xs:element name="rpsServerName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="convertJobMonitor">
        <xs:complexContent>
          <xs:extension base="tns:flashJobMonitor">
            <xs:sequence>
              <xs:element name="jobMonitor" type="ns12:repJobMonitor" minOccurs="0"/>
              <xs:element name="rpsPolicyUUID" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="ivmJobMonitor">
        <xs:complexContent>
          <xs:extension base="tns:flashJobMonitor">
            <xs:sequence>
              <xs:element name="ivmJobUUID" type="xs:string" minOccurs="0"/>
              <xs:element name="vmDisplayName" type="xs:string" minOccurs="0"/>
              <xs:element name="ivmNodes" type="tns:ivmNodeInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="ivmNodeInfo">
        <xs:sequence>
          <xs:element name="vmUUID" type="xs:string" minOccurs="0"/>
          <xs:element name="vmSessionNum" type="xs:string" minOccurs="0"/>
          <xs:element name="vmDisplayName" type="xs:string" minOccurs="0"/>
          <xs:element name="powerStatus" type="xs:long"/>
          <xs:element name="ips" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="vmHeartbeat" type="xs:boolean"/>
          <xs:element name="aliveCheckEnabled" type="xs:boolean"/>
          <xs:element name="aliveCheckType" type="xs:int"/>
          <xs:element name="AliveCheckStatus" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="AliveCheckItem" type="ns12:aliveCheckItem" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xs:schema version="1.0" targetNamespace="http://vsphere.data.webservice.arcflash.ca.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      <xs:complexType name="VirtualCenter">
        <xs:sequence>
          <xs:element name="vcName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="username" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="password" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="protocol" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="port" type="xs:int" form="qualified"/>
          <xs:element name="id" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="version" type="xs:string" form="qualified" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="VMNetworkConfig">
        <xs:sequence>
          <xs:element name="nodeName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="deviceType" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="label" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="backingInfoType" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="deviceName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="switchUUID" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="portgroupKey" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="switchName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="portgroupName" type="xs:string" form="qualified" minOccurs="0"/>
          <xs:element name="hyperVAdapterType" type="xs:int" form="qualified"/>
          <xs:element name="hyperVAdapterID" type="xs:int" form="qualified"/>
          <xs:element name="Id" type="xs:string" minOccurs="0"/>
          <xs:element name="adapterType" type="xs:string" minOccurs="0"/>
          <xs:element name="parentName" type="xs:string" minOccurs="0"/>
          <xs:element name="parentId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
  </types>
  <message name="getRPSPolicyList">
    <part name="parameters" element="tns:getRPSPolicyList"/>
  </message>
  <message name="getRPSPolicyListResponse">
    <part name="parameters" element="tns:getRPSPolicyListResponse"/>
  </message>
  <message name="getRPSPolicyList4Restore">
    <part name="parameters" element="tns:getRPSPolicyList4Restore"/>
  </message>
  <message name="getRPSPolicyList4RestoreResponse">
    <part name="parameters" element="tns:getRPSPolicyList4RestoreResponse"/>
  </message>
  <message name="UnRegisterD2DListFromRPS">
    <part name="parameters" element="tns:UnRegisterD2DListFromRPS"/>
  </message>
  <message name="UnRegisterD2DListFromRPSResponse">
    <part name="parameters" element="tns:UnRegisterD2DListFromRPSResponse"/>
  </message>
  <message name="generateBackupInfoDB">
    <part name="parameters" element="tns:generateBackupInfoDB"/>
  </message>
  <message name="generateBackupInfoDBResponse">
    <part name="parameters" element="tns:generateBackupInfoDBResponse"/>
  </message>
  <message name="handleD2DIPChange">
    <part name="parameters" element="tns:handleD2DIPChange"/>
  </message>
  <message name="handleD2DIPChangeResponse">
    <part name="parameters" element="tns:handleD2DIPChangeResponse"/>
  </message>
  <message name="getRPSPolicy4D2D">
    <part name="parameters" element="tns:getRPSPolicy4D2D"/>
  </message>
  <message name="getRPSPolicy4D2DResponse">
    <part name="parameters" element="tns:getRPSPolicy4D2DResponse"/>
  </message>
  <message name="RegisterD2DListToPolicy">
    <part name="parameters" element="tns:RegisterD2DListToPolicy"/>
  </message>
  <message name="RegisterD2DListToPolicyResponse">
    <part name="parameters" element="tns:RegisterD2DListToPolicyResponse"/>
  </message>
  <message name="RPSSubmitInstantVM">
    <part name="parameters" element="tns:RPSSubmitInstantVM"/>
  </message>
  <message name="RPSSubmitInstantVMResponse">
    <part name="parameters" element="tns:RPSSubmitInstantVMResponse"/>
  </message>
  <message name="getBackupD2DList">
    <part name="parameters" element="tns:getBackupD2DList"/>
  </message>
  <message name="getBackupD2DListResponse">
    <part name="parameters" element="tns:getBackupD2DListResponse"/>
  </message>
  <message name="UnRegisterD2DFromRPS">
    <part name="parameters" element="tns:UnRegisterD2DFromRPS"/>
  </message>
  <message name="UnRegisterD2DFromRPSResponse">
    <part name="parameters" element="tns:UnRegisterD2DFromRPSResponse"/>
  </message>
  <message name="RegisterD2DToRPS">
    <part name="parameters" element="tns:RegisterD2DToRPS"/>
  </message>
  <message name="RegisterD2DToRPSResponse">
    <part name="parameters" element="tns:RegisterD2DToRPSResponse"/>
  </message>
  <message name="assignPolicyToD2D">
    <part name="parameters" element="tns:assignPolicyToD2D"/>
  </message>
  <message name="assignPolicyToD2DResponse">
    <part name="parameters" element="tns:assignPolicyToD2DResponse"/>
  </message>
  <message name="getArchiveSessions">
    <part name="parameters" element="tns:getArchiveSessions"/>
  </message>
  <message name="getArchiveSessionsResponse">
    <part name="parameters" element="tns:getArchiveSessionsResponse"/>
  </message>
  <message name="getDefaultJobHistoryFilter">
    <part name="parameters" element="tns:getDefaultJobHistoryFilter"/>
  </message>
  <message name="getDefaultJobHistoryFilterResponse">
    <part name="parameters" element="tns:getDefaultJobHistoryFilterResponse"/>
  </message>
  <message name="getDataStoreStatus">
    <part name="parameters" element="tns:getDataStoreStatus"/>
  </message>
  <message name="getDataStoreStatusResponse">
    <part name="parameters" element="tns:getDataStoreStatusResponse"/>
  </message>
  <message name="validateUser">
    <part name="parameters" element="tns:validateUser"/>
  </message>
  <message name="validateUserResponse">
    <part name="parameters" element="tns:validateUserResponse"/>
  </message>
  <message name="pauseMerge">
    <part name="parameters" element="tns:pauseMerge"/>
  </message>
  <message name="pauseMergeResponse">
    <part name="parameters" element="tns:pauseMergeResponse"/>
  </message>
  <message name="resumeMerge">
    <part name="parameters" element="tns:resumeMerge"/>
  </message>
  <message name="resumeMergeResponse">
    <part name="parameters" element="tns:resumeMergeResponse"/>
  </message>
  <message name="getJobHistory">
    <part name="parameters" element="tns:getJobHistory"/>
  </message>
  <message name="getJobHistoryResponse">
    <part name="parameters" element="tns:getJobHistoryResponse"/>
  </message>
  <message name="validateDest">
    <part name="parameters" element="tns:validateDest"/>
  </message>
  <message name="validateDestResponse">
    <part name="parameters" element="tns:validateDestResponse"/>
  </message>
  <message name="login">
    <part name="parameters" element="tns:login"/>
  </message>
  <message name="loginResponse">
    <part name="parameters" element="tns:loginResponse"/>
  </message>
  <message name="getDataStoreInstance">
    <part name="parameters" element="tns:getDataStoreInstance"/>
  </message>
  <message name="getDataStoreInstanceResponse">
    <part name="parameters" element="tns:getDataStoreInstanceResponse"/>
  </message>
  <message name="getRegistedClientByDatastore">
    <part name="parameters" element="tns:getRegistedClientByDatastore"/>
  </message>
  <message name="getRegistedClientByDatastoreResponse">
    <part name="parameters" element="tns:getRegistedClientByDatastoreResponse"/>
  </message>
  <message name="establishTrust">
    <part name="parameters" element="tns:establishTrust"/>
  </message>
  <message name="establishTrustResponse">
    <part name="parameters" element="tns:establishTrustResponse"/>
  </message>
  <message name="getDataStoreHealthStatus">
    <part name="parameters" element="tns:getDataStoreHealthStatus"/>
  </message>
  <message name="getDataStoreHealthStatusResponse">
    <part name="parameters" element="tns:getDataStoreHealthStatusResponse"/>
  </message>
  <message name="getRegistedClientList">
    <part name="parameters" element="tns:getRegistedClientList"/>
  </message>
  <message name="getRegistedClientListResponse">
    <part name="parameters" element="tns:getRegistedClientListResponse"/>
  </message>
  <message name="getRPSRunningJobs">
    <part name="parameters" element="tns:getRPSRunningJobs"/>
  </message>
  <message name="getRPSRunningJobsResponse">
    <part name="parameters" element="tns:getRPSRunningJobsResponse"/>
  </message>
  <message name="getRPSWaitingJobs">
    <part name="parameters" element="tns:getRPSWaitingJobs"/>
  </message>
  <message name="getRPSWaitingJobsResponse">
    <part name="parameters" element="tns:getRPSWaitingJobsResponse"/>
  </message>
  <message name="getRPSRunningJobsByType">
    <part name="parameters" element="tns:getRPSRunningJobsByType"/>
  </message>
  <message name="getRPSRunningJobsByTypeResponse">
    <part name="parameters" element="tns:getRPSRunningJobsByTypeResponse"/>
  </message>
  <message name="getRPSWaitingJobsByType">
    <part name="parameters" element="tns:getRPSWaitingJobsByType"/>
  </message>
  <message name="getRPSWaitingJobsByTypeResponse">
    <part name="parameters" element="tns:getRPSWaitingJobsByTypeResponse"/>
  </message>
  <message name="getClientRunningJobs">
    <part name="parameters" element="tns:getClientRunningJobs"/>
  </message>
  <message name="getClientRunningJobsResponse">
    <part name="parameters" element="tns:getClientRunningJobsResponse"/>
  </message>
  <message name="getClientWaitingJobs">
    <part name="parameters" element="tns:getClientWaitingJobs"/>
  </message>
  <message name="getClientWaitingJobsResponse">
    <part name="parameters" element="tns:getClientWaitingJobsResponse"/>
  </message>
  <message name="getRPSServerID">
    <part name="parameters" element="tns:getRPSServerID"/>
  </message>
  <message name="getRPSServerIDResponse">
    <part name="parameters" element="tns:getRPSServerIDResponse"/>
  </message>
  <message name="submitFSOndemandCatalogJob">
    <part name="parameters" element="tns:submitFSOndemandCatalogJob"/>
  </message>
  <message name="submitFSOndemandCatalogJobResponse">
    <part name="parameters" element="tns:submitFSOndemandCatalogJobResponse"/>
  </message>
  <message name="DataStoreUpdateDSPathStatus">
    <part name="parameters" element="tns:DataStoreUpdateDSPathStatus"/>
  </message>
  <message name="DataStoreUpdateDSPathStatusResponse">
    <part name="parameters" element="tns:DataStoreUpdateDSPathStatusResponse"/>
  </message>
  <message name="RegisterAndAssignD2DListToRPS">
    <part name="parameters" element="tns:RegisterAndAssignD2DListToRPS"/>
  </message>
  <message name="RegisterAndAssignD2DListToRPSResponse">
    <part name="parameters" element="tns:RegisterAndAssignD2DListToRPSResponse"/>
  </message>
  <message name="getVersionInfo">
    <part name="parameters" element="tns:getVersionInfo"/>
  </message>
  <message name="getVersionInfoResponse">
    <part name="parameters" element="tns:getVersionInfoResponse"/>
  </message>
  <message name="cancelJob">
    <part name="parameters" element="tns:cancelJob"/>
  </message>
  <message name="cancelJobResponse">
    <part name="parameters" element="tns:cancelJobResponse"/>
  </message>
  <message name="validateUserByUUID">
    <part name="parameters" element="tns:validateUserByUUID"/>
  </message>
  <message name="validateUserByUUIDResponse">
    <part name="parameters" element="tns:validateUserByUUIDResponse"/>
  </message>
  <message name="queryCatalogStatus">
    <part name="parameters" element="tns:queryCatalogStatus"/>
  </message>
  <message name="queryCatalogStatusResponse">
    <part name="parameters" element="tns:queryCatalogStatusResponse"/>
  </message>
  <message name="getActivityLogs">
    <part name="parameters" element="tns:getActivityLogs"/>
  </message>
  <message name="getActivityLogsResponse">
    <part name="parameters" element="tns:getActivityLogsResponse"/>
  </message>
  <message name="getJobActivityLogs">
    <part name="parameters" element="tns:getJobActivityLogs"/>
  </message>
  <message name="getJobActivityLogsResponse">
    <part name="parameters" element="tns:getJobActivityLogsResponse"/>
  </message>
  <message name="getMappedNetworkPath">
    <part name="parameters" element="tns:getMappedNetworkPath"/>
  </message>
  <message name="getMappedNetworkPathResponse">
    <part name="parameters" element="tns:getMappedNetworkPathResponse"/>
  </message>
  <message name="RPSCancelJob">
    <part name="parameters" element="tns:RPSCancelJob"/>
  </message>
  <message name="RPSCancelJobResponse">
    <part name="parameters" element="tns:RPSCancelJobResponse"/>
  </message>
  <message name="RPSResumeJob">
    <part name="parameters" element="tns:RPSResumeJob"/>
  </message>
  <message name="RPSResumeJobResponse">
    <part name="parameters" element="tns:RPSResumeJobResponse"/>
  </message>
  <message name="getRPSJobs">
    <part name="parameters" element="tns:getRPSJobs"/>
  </message>
  <message name="getRPSJobsResponse">
    <part name="parameters" element="tns:getRPSJobsResponse"/>
  </message>
  <message name="getDataStoreInfo4Lightintegration">
    <part name="parameters" element="tns:getDataStoreInfo4Lightintegration"/>
  </message>
  <message name="getDataStoreInfo4LightintegrationResponse">
    <part name="parameters" element="tns:getDataStoreInfo4LightintegrationResponse"/>
  </message>
  <message name="getJobMonitorsByD2DUuidAndType">
    <part name="parameters" element="tns:getJobMonitorsByD2DUuidAndType"/>
  </message>
  <message name="getJobMonitorsByD2DUuidAndTypeResponse">
    <part name="parameters" element="tns:getJobMonitorsByD2DUuidAndTypeResponse"/>
  </message>
  <message name="canBMRJobRun">
    <part name="parameters" element="tns:canBMRJobRun"/>
  </message>
  <message name="canBMRJobRunResponse">
    <part name="parameters" element="tns:canBMRJobRunResponse"/>
  </message>
  <message name="RPSSubmitBackup">
    <part name="parameters" element="tns:RPSSubmitBackup"/>
  </message>
  <message name="RPSSubmitBackupResponse">
    <part name="parameters" element="tns:RPSSubmitBackupResponse"/>
  </message>
  <message name="rpsSubmitLinuxBaseJob">
    <part name="parameters" element="tns:rpsSubmitLinuxBaseJob"/>
  </message>
  <message name="rpsSubmitLinuxBaseJobResponse">
    <part name="parameters" element="tns:rpsSubmitLinuxBaseJobResponse"/>
  </message>
  <message name="RPSSubmitBMRJob">
    <part name="parameters" element="tns:RPSSubmitBMRJob"/>
  </message>
  <message name="RPSSubmitBMRJobResponse">
    <part name="parameters" element="tns:RPSSubmitBMRJobResponse"/>
  </message>
  <message name="RPSSubmitArchiveJob">
    <part name="parameters" element="tns:RPSSubmitArchiveJob"/>
  </message>
  <message name="RPSSubmitArchiveJobResponse">
    <part name="parameters" element="tns:RPSSubmitArchiveJobResponse"/>
  </message>
  <message name="reportBMRJobMonitor">
    <part name="parameters" element="tns:reportBMRJobMonitor"/>
  </message>
  <message name="reportBMRJobMonitorResponse">
    <part name="parameters" element="tns:reportBMRJobMonitorResponse"/>
  </message>
  <message name="RPSSubmitRestoreJob">
    <part name="parameters" element="tns:RPSSubmitRestoreJob"/>
  </message>
  <message name="RPSSubmitRestoreJobResponse">
    <part name="parameters" element="tns:RPSSubmitRestoreJobResponse"/>
  </message>
  <message name="RPSSubmitCatalog">
    <part name="parameters" element="tns:RPSSubmitCatalog"/>
  </message>
  <message name="RPSSubmitCatalogResponse">
    <part name="parameters" element="tns:RPSSubmitCatalogResponse"/>
  </message>
  <message name="RPSSubmitCopyJob">
    <part name="parameters" element="tns:RPSSubmitCopyJob"/>
  </message>
  <message name="RPSSubmitCopyJobResponse">
    <part name="parameters" element="tns:RPSSubmitCopyJobResponse"/>
  </message>
  <message name="handleDataSyncEvent">
    <part name="parameters" element="tns:handleDataSyncEvent"/>
  </message>
  <message name="handleDataSyncEventResponse">
    <part name="parameters" element="tns:handleDataSyncEventResponse"/>
  </message>
  <message name="handleJobEvent">
    <part name="parameters" element="tns:handleJobEvent"/>
  </message>
  <message name="handleJobEventResponse">
    <part name="parameters" element="tns:handleJobEventResponse"/>
  </message>
  <message name="handleJobHistoryEvent">
    <part name="parameters" element="tns:handleJobHistoryEvent"/>
  </message>
  <message name="handleJobHistoryEventResponse">
    <part name="parameters" element="tns:handleJobHistoryEventResponse"/>
  </message>
  <message name="handleActivityLogEvent">
    <part name="parameters" element="tns:handleActivityLogEvent"/>
  </message>
  <message name="handleActivityLogEventResponse">
    <part name="parameters" element="tns:handleActivityLogEventResponse"/>
  </message>
  <message name="checkUserByUUID">
    <part name="parameters" element="tns:checkUserByUUID"/>
  </message>
  <message name="checkUserByUUIDResponse">
    <part name="parameters" element="tns:checkUserByUUIDResponse"/>
  </message>
  <message name="handleDatastoreStatusChangeEvent">
    <part name="parameters" element="tns:handleDatastoreStatusChangeEvent"/>
  </message>
  <message name="handleDatastoreStatusChangeEventResponse">
    <part name="parameters" element="tns:handleDatastoreStatusChangeEventResponse"/>
  </message>
  <message name="getRPSPolicySummaries">
    <part name="parameters" element="tns:getRPSPolicySummaries"/>
  </message>
  <message name="getRPSPolicySummariesResponse">
    <part name="parameters" element="tns:getRPSPolicySummariesResponse"/>
  </message>
  <message name="RPSSubmitConversion">
    <part name="parameters" element="tns:RPSSubmitConversion"/>
  </message>
  <message name="RPSSubmitConversionResponse">
    <part name="parameters" element="tns:RPSSubmitConversionResponse"/>
  </message>
  <message name="addConverterToRPS">
    <part name="parameters" element="tns:addConverterToRPS"/>
  </message>
  <message name="addConverterToRPSResponse">
    <part name="parameters" element="tns:addConverterToRPSResponse"/>
  </message>
  <message name="rpsSubmitLinuxBackupJob">
    <part name="parameters" element="tns:rpsSubmitLinuxBackupJob"/>
  </message>
  <message name="rpsSubmitLinuxBackupJobResponse">
    <part name="parameters" element="tns:rpsSubmitLinuxBackupJobResponse"/>
  </message>
  <message name="getArchiveDestinationItems">
    <part name="parameters" element="tns:getArchiveDestinationItems"/>
  </message>
  <message name="getArchiveDestinationItemsResponse">
    <part name="parameters" element="tns:getArchiveDestinationItemsResponse"/>
  </message>
  <message name="getArchiveCatalogItems">
    <part name="parameters" element="tns:getArchiveCatalogItems"/>
  </message>
  <message name="getArchiveCatalogItemsResponse">
    <part name="parameters" element="tns:getArchiveCatalogItemsResponse"/>
  </message>
  <message name="getAllArchiveCatalogItems">
    <part name="parameters" element="tns:getAllArchiveCatalogItems"/>
  </message>
  <message name="getAllArchiveCatalogItemsResponse">
    <part name="parameters" element="tns:getAllArchiveCatalogItemsResponse"/>
  </message>
  <message name="getArchiveCatalogItemsCount">
    <part name="parameters" element="tns:getArchiveCatalogItemsCount"/>
  </message>
  <message name="getArchiveCatalogItemsCountResponse">
    <part name="parameters" element="tns:getArchiveCatalogItemsCountResponse"/>
  </message>
  <portType name="IRPSService4D2D">
    <operation name="getRPSPolicyList">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicyListRequest" message="tns:getRPSPolicyList"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicyListResponse" message="tns:getRPSPolicyListResponse"/>
    </operation>
    <operation name="getRPSPolicyList4Restore">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicyList4RestoreRequest" message="tns:getRPSPolicyList4Restore"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicyList4RestoreResponse" message="tns:getRPSPolicyList4RestoreResponse"/>
    </operation>
    <operation name="UnRegisterD2DListFromRPS">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/UnRegisterD2DListFromRPSRequest" message="tns:UnRegisterD2DListFromRPS"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/UnRegisterD2DListFromRPSResponse" message="tns:UnRegisterD2DListFromRPSResponse"/>
    </operation>
    <operation name="generateBackupInfoDB">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/generateBackupInfoDBRequest" message="tns:generateBackupInfoDB"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/generateBackupInfoDBResponse" message="tns:generateBackupInfoDBResponse"/>
    </operation>
    <operation name="handleD2DIPChange">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleD2DIPChangeRequest" message="tns:handleD2DIPChange"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleD2DIPChangeResponse" message="tns:handleD2DIPChangeResponse"/>
    </operation>
    <operation name="getRPSPolicy4D2D">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicy4D2DRequest" message="tns:getRPSPolicy4D2D"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicy4D2DResponse" message="tns:getRPSPolicy4D2DResponse"/>
    </operation>
    <operation name="RegisterD2DListToPolicy">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterD2DListToPolicyRequest" message="tns:RegisterD2DListToPolicy"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterD2DListToPolicyResponse" message="tns:RegisterD2DListToPolicyResponse"/>
    </operation>
    <operation name="RPSSubmitInstantVM">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitInstantVMRequest" message="tns:RPSSubmitInstantVM"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitInstantVMResponse" message="tns:RPSSubmitInstantVMResponse"/>
    </operation>
    <operation name="getBackupD2DList">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getBackupD2DListRequest" message="tns:getBackupD2DList"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getBackupD2DListResponse" message="tns:getBackupD2DListResponse"/>
    </operation>
    <operation name="UnRegisterD2DFromRPS">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/UnRegisterD2DFromRPSRequest" message="tns:UnRegisterD2DFromRPS"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/UnRegisterD2DFromRPSResponse" message="tns:UnRegisterD2DFromRPSResponse"/>
    </operation>
    <operation name="RegisterD2DToRPS">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterD2DToRPSRequest" message="tns:RegisterD2DToRPS"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterD2DToRPSResponse" message="tns:RegisterD2DToRPSResponse"/>
    </operation>
    <operation name="assignPolicyToD2D">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/assignPolicyToD2DRequest" message="tns:assignPolicyToD2D"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/assignPolicyToD2DResponse" message="tns:assignPolicyToD2DResponse"/>
    </operation>
    <operation name="getArchiveSessions">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveSessionsRequest" message="tns:getArchiveSessions"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveSessionsResponse" message="tns:getArchiveSessionsResponse"/>
    </operation>
    <operation name="getDefaultJobHistoryFilter">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDefaultJobHistoryFilterRequest" message="tns:getDefaultJobHistoryFilter"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDefaultJobHistoryFilterResponse" message="tns:getDefaultJobHistoryFilterResponse"/>
    </operation>
    <operation name="getDataStoreStatus">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreStatusRequest" message="tns:getDataStoreStatus"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreStatusResponse" message="tns:getDataStoreStatusResponse"/>
    </operation>
    <operation name="validateUser">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateUserRequest" message="tns:validateUser"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateUserResponse" message="tns:validateUserResponse"/>
    </operation>
    <operation name="pauseMerge">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/pauseMergeRequest" message="tns:pauseMerge"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/pauseMergeResponse" message="tns:pauseMergeResponse"/>
    </operation>
    <operation name="resumeMerge">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/resumeMergeRequest" message="tns:resumeMerge"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/resumeMergeResponse" message="tns:resumeMergeResponse"/>
    </operation>
    <operation name="getJobHistory">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobHistoryRequest" message="tns:getJobHistory"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobHistoryResponse" message="tns:getJobHistoryResponse"/>
    </operation>
    <operation name="validateDest">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateDestRequest" message="tns:validateDest"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateDestResponse" message="tns:validateDestResponse"/>
    </operation>
    <operation name="login">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/loginRequest" message="tns:login"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/loginResponse" message="tns:loginResponse"/>
    </operation>
    <operation name="getDataStoreInstance">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreInstanceRequest" message="tns:getDataStoreInstance"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreInstanceResponse" message="tns:getDataStoreInstanceResponse"/>
    </operation>
    <operation name="getRegistedClientByDatastore">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRegistedClientByDatastoreRequest" message="tns:getRegistedClientByDatastore"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRegistedClientByDatastoreResponse" message="tns:getRegistedClientByDatastoreResponse"/>
    </operation>
    <operation name="establishTrust">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/establishTrustRequest" message="tns:establishTrust"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/establishTrustResponse" message="tns:establishTrustResponse"/>
    </operation>
    <operation name="getDataStoreHealthStatus">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreHealthStatusRequest" message="tns:getDataStoreHealthStatus"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreHealthStatusResponse" message="tns:getDataStoreHealthStatusResponse"/>
    </operation>
    <operation name="getRegistedClientList">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRegistedClientListRequest" message="tns:getRegistedClientList"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRegistedClientListResponse" message="tns:getRegistedClientListResponse"/>
    </operation>
    <operation name="getRPSRunningJobs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSRunningJobsRequest" message="tns:getRPSRunningJobs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSRunningJobsResponse" message="tns:getRPSRunningJobsResponse"/>
    </operation>
    <operation name="getRPSWaitingJobs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSWaitingJobsRequest" message="tns:getRPSWaitingJobs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSWaitingJobsResponse" message="tns:getRPSWaitingJobsResponse"/>
    </operation>
    <operation name="getRPSRunningJobsByType">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSRunningJobsByTypeRequest" message="tns:getRPSRunningJobsByType"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSRunningJobsByTypeResponse" message="tns:getRPSRunningJobsByTypeResponse"/>
    </operation>
    <operation name="getRPSWaitingJobsByType">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSWaitingJobsByTypeRequest" message="tns:getRPSWaitingJobsByType"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSWaitingJobsByTypeResponse" message="tns:getRPSWaitingJobsByTypeResponse"/>
    </operation>
    <operation name="getClientRunningJobs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getClientRunningJobsRequest" message="tns:getClientRunningJobs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getClientRunningJobsResponse" message="tns:getClientRunningJobsResponse"/>
    </operation>
    <operation name="getClientWaitingJobs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getClientWaitingJobsRequest" message="tns:getClientWaitingJobs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getClientWaitingJobsResponse" message="tns:getClientWaitingJobsResponse"/>
    </operation>
    <operation name="getRPSServerID">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSServerIDRequest" message="tns:getRPSServerID"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSServerIDResponse" message="tns:getRPSServerIDResponse"/>
    </operation>
    <operation name="submitFSOndemandCatalogJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/submitFSOndemandCatalogJobRequest" message="tns:submitFSOndemandCatalogJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/submitFSOndemandCatalogJobResponse" message="tns:submitFSOndemandCatalogJobResponse"/>
    </operation>
    <operation name="DataStoreUpdateDSPathStatus">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/DataStoreUpdateDSPathStatusRequest" message="tns:DataStoreUpdateDSPathStatus"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/DataStoreUpdateDSPathStatusResponse" message="tns:DataStoreUpdateDSPathStatusResponse"/>
    </operation>
    <operation name="RegisterAndAssignD2DListToRPS">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterAndAssignD2DListToRPSRequest" message="tns:RegisterAndAssignD2DListToRPS"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RegisterAndAssignD2DListToRPSResponse" message="tns:RegisterAndAssignD2DListToRPSResponse"/>
    </operation>
    <operation name="getVersionInfo">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getVersionInfoRequest" message="tns:getVersionInfo"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getVersionInfoResponse" message="tns:getVersionInfoResponse"/>
    </operation>
    <operation name="cancelJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/cancelJobRequest" message="tns:cancelJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/cancelJobResponse" message="tns:cancelJobResponse"/>
    </operation>
    <operation name="validateUserByUUID">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateUserByUUIDRequest" message="tns:validateUserByUUID"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/validateUserByUUIDResponse" message="tns:validateUserByUUIDResponse"/>
    </operation>
    <operation name="queryCatalogStatus">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/queryCatalogStatusRequest" message="tns:queryCatalogStatus"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/queryCatalogStatusResponse" message="tns:queryCatalogStatusResponse"/>
    </operation>
    <operation name="getActivityLogs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getActivityLogsRequest" message="tns:getActivityLogs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getActivityLogsResponse" message="tns:getActivityLogsResponse"/>
    </operation>
    <operation name="getJobActivityLogs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobActivityLogsRequest" message="tns:getJobActivityLogs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobActivityLogsResponse" message="tns:getJobActivityLogsResponse"/>
    </operation>
    <operation name="getMappedNetworkPath">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getMappedNetworkPathRequest" message="tns:getMappedNetworkPath"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getMappedNetworkPathResponse" message="tns:getMappedNetworkPathResponse"/>
    </operation>
    <operation name="RPSCancelJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSCancelJobRequest" message="tns:RPSCancelJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSCancelJobResponse" message="tns:RPSCancelJobResponse"/>
    </operation>
    <operation name="RPSResumeJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSResumeJobRequest" message="tns:RPSResumeJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSResumeJobResponse" message="tns:RPSResumeJobResponse"/>
    </operation>
    <operation name="getRPSJobs">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSJobsRequest" message="tns:getRPSJobs"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSJobsResponse" message="tns:getRPSJobsResponse"/>
    </operation>
    <operation name="getDataStoreInfo4Lightintegration">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreInfo4LightintegrationRequest" message="tns:getDataStoreInfo4Lightintegration"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getDataStoreInfo4LightintegrationResponse" message="tns:getDataStoreInfo4LightintegrationResponse"/>
    </operation>
    <operation name="getJobMonitorsByD2DUuidAndType">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobMonitorsByD2DUuidAndTypeRequest" message="tns:getJobMonitorsByD2DUuidAndType"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getJobMonitorsByD2DUuidAndTypeResponse" message="tns:getJobMonitorsByD2DUuidAndTypeResponse"/>
    </operation>
    <operation name="canBMRJobRun">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/canBMRJobRunRequest" message="tns:canBMRJobRun"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/canBMRJobRunResponse" message="tns:canBMRJobRunResponse"/>
    </operation>
    <operation name="RPSSubmitBackup">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitBackupRequest" message="tns:RPSSubmitBackup"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitBackupResponse" message="tns:RPSSubmitBackupResponse"/>
    </operation>
    <operation name="rpsSubmitLinuxBaseJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/rpsSubmitLinuxBaseJobRequest" message="tns:rpsSubmitLinuxBaseJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/rpsSubmitLinuxBaseJobResponse" message="tns:rpsSubmitLinuxBaseJobResponse"/>
    </operation>
    <operation name="RPSSubmitBMRJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitBMRJobRequest" message="tns:RPSSubmitBMRJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitBMRJobResponse" message="tns:RPSSubmitBMRJobResponse"/>
    </operation>
    <operation name="RPSSubmitArchiveJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitArchiveJobRequest" message="tns:RPSSubmitArchiveJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitArchiveJobResponse" message="tns:RPSSubmitArchiveJobResponse"/>
    </operation>
    <operation name="reportBMRJobMonitor">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/reportBMRJobMonitorRequest" message="tns:reportBMRJobMonitor"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/reportBMRJobMonitorResponse" message="tns:reportBMRJobMonitorResponse"/>
    </operation>
    <operation name="RPSSubmitRestoreJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitRestoreJobRequest" message="tns:RPSSubmitRestoreJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitRestoreJobResponse" message="tns:RPSSubmitRestoreJobResponse"/>
    </operation>
    <operation name="RPSSubmitCatalog">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitCatalogRequest" message="tns:RPSSubmitCatalog"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitCatalogResponse" message="tns:RPSSubmitCatalogResponse"/>
    </operation>
    <operation name="RPSSubmitCopyJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitCopyJobRequest" message="tns:RPSSubmitCopyJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitCopyJobResponse" message="tns:RPSSubmitCopyJobResponse"/>
    </operation>
    <operation name="handleDataSyncEvent">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleDataSyncEventRequest" message="tns:handleDataSyncEvent"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleDataSyncEventResponse" message="tns:handleDataSyncEventResponse"/>
    </operation>
    <operation name="handleJobEvent">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleJobEventRequest" message="tns:handleJobEvent"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleJobEventResponse" message="tns:handleJobEventResponse"/>
    </operation>
    <operation name="handleJobHistoryEvent">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleJobHistoryEventRequest" message="tns:handleJobHistoryEvent"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleJobHistoryEventResponse" message="tns:handleJobHistoryEventResponse"/>
    </operation>
    <operation name="handleActivityLogEvent">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleActivityLogEventRequest" message="tns:handleActivityLogEvent"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleActivityLogEventResponse" message="tns:handleActivityLogEventResponse"/>
    </operation>
    <operation name="checkUserByUUID">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/checkUserByUUIDRequest" message="tns:checkUserByUUID"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/checkUserByUUIDResponse" message="tns:checkUserByUUIDResponse"/>
    </operation>
    <operation name="handleDatastoreStatusChangeEvent">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleDatastoreStatusChangeEventRequest" message="tns:handleDatastoreStatusChangeEvent"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/handleDatastoreStatusChangeEventResponse" message="tns:handleDatastoreStatusChangeEventResponse"/>
    </operation>
    <operation name="getRPSPolicySummaries">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicySummariesRequest" message="tns:getRPSPolicySummaries"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getRPSPolicySummariesResponse" message="tns:getRPSPolicySummariesResponse"/>
    </operation>
    <operation name="RPSSubmitConversion">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitConversionRequest" message="tns:RPSSubmitConversion"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/RPSSubmitConversionResponse" message="tns:RPSSubmitConversionResponse"/>
    </operation>
    <operation name="addConverterToRPS">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/addConverterToRPSRequest" message="tns:addConverterToRPS"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/addConverterToRPSResponse" message="tns:addConverterToRPSResponse"/>
    </operation>
    <operation name="rpsSubmitLinuxBackupJob">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/rpsSubmitLinuxBackupJobRequest" message="tns:rpsSubmitLinuxBackupJob"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/rpsSubmitLinuxBackupJobResponse" message="tns:rpsSubmitLinuxBackupJobResponse"/>
    </operation>
    <operation name="getArchiveDestinationItems">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveDestinationItemsRequest" message="tns:getArchiveDestinationItems"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveDestinationItemsResponse" message="tns:getArchiveDestinationItemsResponse"/>
    </operation>
    <operation name="getArchiveCatalogItems">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveCatalogItemsRequest" message="tns:getArchiveCatalogItems"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveCatalogItemsResponse" message="tns:getArchiveCatalogItemsResponse"/>
    </operation>
    <operation name="getAllArchiveCatalogItems">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getAllArchiveCatalogItemsRequest" message="tns:getAllArchiveCatalogItems"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getAllArchiveCatalogItemsResponse" message="tns:getAllArchiveCatalogItemsResponse"/>
    </operation>
    <operation name="getArchiveCatalogItemsCount">
      <input wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveCatalogItemsCountRequest" message="tns:getArchiveCatalogItemsCount"/>
      <output wsam:Action="http://webservice.arcflash.ca.com/IRPSService4D2D/getArchiveCatalogItemsCountResponse" message="tns:getArchiveCatalogItemsCountResponse"/>
    </operation>
  </portType>
  <binding name="RPSService4D2DImplHttpSoap11EndpointBinding" type="tns:IRPSService4D2D">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getRPSPolicyList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSPolicyList4Restore">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UnRegisterD2DListFromRPS">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="generateBackupInfoDB">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleD2DIPChange">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSPolicy4D2D">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RegisterD2DListToPolicy">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitInstantVM">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getBackupD2DList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="UnRegisterD2DFromRPS">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RegisterD2DToRPS">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="assignPolicyToD2D">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getArchiveSessions">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDefaultJobHistoryFilter">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDataStoreStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="validateUser">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="pauseMerge">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="resumeMerge">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getJobHistory">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="validateDest">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="login">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDataStoreInstance">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRegistedClientByDatastore">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="establishTrust">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDataStoreHealthStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRegistedClientList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSRunningJobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSWaitingJobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSRunningJobsByType">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSWaitingJobsByType">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getClientRunningJobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getClientWaitingJobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSServerID">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="submitFSOndemandCatalogJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DataStoreUpdateDSPathStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RegisterAndAssignD2DListToRPS">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getVersionInfo">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="cancelJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="validateUserByUUID">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="queryCatalogStatus">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getActivityLogs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getJobActivityLogs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getMappedNetworkPath">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSCancelJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSResumeJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSJobs">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getDataStoreInfo4Lightintegration">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getJobMonitorsByD2DUuidAndType">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="canBMRJobRun">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitBackup">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="rpsSubmitLinuxBaseJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitBMRJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitArchiveJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="reportBMRJobMonitor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitRestoreJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitCatalog">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitCopyJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleDataSyncEvent">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleJobEvent">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleJobHistoryEvent">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleActivityLogEvent">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="checkUserByUUID">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="handleDatastoreStatusChangeEvent">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getRPSPolicySummaries">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RPSSubmitConversion">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="addConverterToRPS">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="rpsSubmitLinuxBackupJob">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getArchiveDestinationItems">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getArchiveCatalogItems">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getAllArchiveCatalogItems">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getArchiveCatalogItemsCount">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="RPSService4D2DImpl">
    <port name="RPSService4D2DImplHttpSoap11Endpoint" binding="tns:RPSService4D2DImplHttpSoap11EndpointBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>

